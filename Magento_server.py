##################################################
# file: Magento_server.py
#
# skeleton generated by "ZSI.generate.wsdl2dispatch.ServiceModuleWriter"
#      /usr/local/bin/wsdl2py http://127.0.0.1/magento/api/v2_soap?wsdl=1
#
##################################################

from ZSI.schema import GED, GTD
from ZSI.TCcompound import ComplexType, Struct
from Magento_types import *
from ZSI.ServiceContainer import ServiceSOAPBinding

# Messages  
class endSession:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        """
        self._sessionId =  kw.get("sessionId")
endSession.typecode = Struct(pname=("urn:Magento","endSession"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=endSession, encoded="urn:Magento")

class endSessionResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        endSessionReturn -- part endSessionReturn
        """
        self._endSessionReturn =  kw.get("endSessionReturn")
endSessionResponse.typecode = Struct(pname=("urn:Magento","endSessionResponse"), ofwhat=[ZSI.TC.Boolean(pname="endSessionReturn", aname="_endSessionReturn", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=endSessionResponse, encoded="urn:Magento")

class login:
    def __init__(self, **kw):
        """Keyword parameters:
        username -- part username
        apiKey -- part apiKey
        """
        self._username =  kw.get("username")
        self._apiKey =  kw.get("apiKey")
login.typecode = Struct(pname=("urn:Magento","login"), ofwhat=[ZSI.TC.String(pname="username", aname="_username", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="apiKey", aname="_apiKey", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=login, encoded="urn:Magento")

class loginResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        loginReturn -- part loginReturn
        """
        self._loginReturn =  kw.get("loginReturn")
loginResponse.typecode = Struct(pname=("urn:Magento","loginResponse"), ofwhat=[ZSI.TC.String(pname="loginReturn", aname="_loginReturn", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=loginResponse, encoded="urn:Magento")

class startSession:
    def __init__(self, **kw):
        """Keyword parameters:
        """
startSession.typecode = Struct(pname=("urn:Magento","startSession"), ofwhat=[], pyclass=startSession, encoded="urn:Magento")

class startSessionResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        startSessionReturn -- part startSessionReturn
        """
        self._startSessionReturn =  kw.get("startSessionReturn")
startSessionResponse.typecode = Struct(pname=("urn:Magento","startSessionResponse"), ofwhat=[ZSI.TC.String(pname="startSessionReturn", aname="_startSessionReturn", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=startSessionResponse, encoded="urn:Magento")

class resourcesRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        """
        self._sessionId =  kw.get("sessionId")
resourcesRequest.typecode = Struct(pname=("urn:Magento","resources"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=resourcesRequest, encoded="urn:Magento")

class resourcesResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        resourcesReturn -- part resourcesReturn
        """
        self._resourcesReturn =  kw.get("resourcesReturn")
resourcesResponse.typecode = Struct(pname=("urn:Magento","resourcesResponse"), ofwhat=[ns0.ArrayOfApis_Def(pname="resourcesReturn", aname="_resourcesReturn", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=resourcesResponse, encoded="urn:Magento")

class globalFaults:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        """
        self._sessionId =  kw.get("sessionId")
globalFaults.typecode = Struct(pname=("urn:Magento","globalFaults"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=globalFaults, encoded="urn:Magento")

class globalFaultsResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        globalFaultsReturn -- part globalFaultsReturn
        """
        self._globalFaultsReturn =  kw.get("globalFaultsReturn")
globalFaultsResponse.typecode = Struct(pname=("urn:Magento","globalFaultsResponse"), ofwhat=[ns0.ArrayOfExistsFaltures_Def(pname="globalFaultsReturn", aname="_globalFaultsReturn", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=globalFaultsResponse, encoded="urn:Magento")

class resourceFaults:
    def __init__(self, **kw):
        """Keyword parameters:
        resourceName -- part resourceName
        sessionId -- part sessionId
        """
        self._resourceName =  kw.get("resourceName")
        self._sessionId =  kw.get("sessionId")
resourceFaults.typecode = Struct(pname=("urn:Magento","resourceFaults"), ofwhat=[ZSI.TC.String(pname="resourceName", aname="_resourceName", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=resourceFaults, encoded="urn:Magento")

class resourceFaultsResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        resourceFaultsReturn -- part resourceFaultsReturn
        """
        self._resourceFaultsReturn =  kw.get("resourceFaultsReturn")
resourceFaultsResponse.typecode = Struct(pname=("urn:Magento","resourceFaultsResponse"), ofwhat=[ns0.ArrayOfExistsFaltures_Def(pname="resourceFaultsReturn", aname="_resourceFaultsReturn", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=resourceFaultsResponse, encoded="urn:Magento")

class storeListRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        """
        self._sessionId =  kw.get("sessionId")
storeListRequest.typecode = Struct(pname=("urn:Magento","storeList"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=storeListRequest, encoded="urn:Magento")

class storeListResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        stores -- part stores
        """
        self._stores =  kw.get("stores")
storeListResponse.typecode = Struct(pname=("urn:Magento","storeListResponse"), ofwhat=[ns0.storeEntityArray_Def(pname="stores", aname="_stores", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=storeListResponse, encoded="urn:Magento")

class storeInfoRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        storeId -- part storeId
        """
        self._sessionId =  kw.get("sessionId")
        self._storeId =  kw.get("storeId")
storeInfoRequest.typecode = Struct(pname=("urn:Magento","storeInfo"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="storeId", aname="_storeId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=storeInfoRequest, encoded="urn:Magento")

class storeInfoResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        info -- part info
        """
        self._info =  kw.get("info")
storeInfoResponse.typecode = Struct(pname=("urn:Magento","storeInfoResponse"), ofwhat=[ns0.storeEntity_Def(pname="info", aname="_info", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=storeInfoResponse, encoded="urn:Magento")

class magentoInfoRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        """
        self._sessionId =  kw.get("sessionId")
magentoInfoRequest.typecode = Struct(pname=("urn:Magento","magentoInfo"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=magentoInfoRequest, encoded="urn:Magento")

class magentoInfoResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        info -- part info
        """
        self._info =  kw.get("info")
magentoInfoResponse.typecode = Struct(pname=("urn:Magento","magentoInfoResponse"), ofwhat=[ns0.magentoInfoEntity_Def(pname="info", aname="_info", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=magentoInfoResponse, encoded="urn:Magento")

class directoryCountryListRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        """
        self._sessionId =  kw.get("sessionId")
directoryCountryListRequest.typecode = Struct(pname=("urn:Magento","directoryCountryList"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=directoryCountryListRequest, encoded="urn:Magento")

class directoryCountryListResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        countries -- part countries
        """
        self._countries =  kw.get("countries")
directoryCountryListResponse.typecode = Struct(pname=("urn:Magento","directoryCountryListResponse"), ofwhat=[ns0.directoryCountryEntityArray_Def(pname="countries", aname="_countries", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=directoryCountryListResponse, encoded="urn:Magento")

class directoryRegionListRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        country -- part country
        """
        self._sessionId =  kw.get("sessionId")
        self._country =  kw.get("country")
directoryRegionListRequest.typecode = Struct(pname=("urn:Magento","directoryRegionList"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="country", aname="_country", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=directoryRegionListRequest, encoded="urn:Magento")

class directoryRegionListResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        countries -- part countries
        """
        self._countries =  kw.get("countries")
directoryRegionListResponse.typecode = Struct(pname=("urn:Magento","directoryRegionListResponse"), ofwhat=[ns0.directoryRegionEntityArray_Def(pname="countries", aname="_countries", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=directoryRegionListResponse, encoded="urn:Magento")

class customerCustomerListRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        filters -- part filters
        """
        self._sessionId =  kw.get("sessionId")
        self._filters =  kw.get("filters")
customerCustomerListRequest.typecode = Struct(pname=("urn:Magento","customerCustomerList"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.filters_Def(pname="filters", aname="_filters", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=customerCustomerListRequest, encoded="urn:Magento")

class customerCustomerListResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        storeView -- part storeView
        """
        self._storeView =  kw.get("storeView")
customerCustomerListResponse.typecode = Struct(pname=("urn:Magento","customerCustomerListResponse"), ofwhat=[ns0.customerCustomerEntityArray_Def(pname="storeView", aname="_storeView", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=customerCustomerListResponse, encoded="urn:Magento")

class customerCustomerCreateRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        customerData -- part customerData
        """
        self._sessionId =  kw.get("sessionId")
        self._customerData =  kw.get("customerData")
customerCustomerCreateRequest.typecode = Struct(pname=("urn:Magento","customerCustomerCreate"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.customerCustomerEntityToCreate_Def(pname="customerData", aname="_customerData", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=customerCustomerCreateRequest, encoded="urn:Magento")

class customerCustomerCreateResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
customerCustomerCreateResponse.typecode = Struct(pname=("urn:Magento","customerCustomerCreateResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=customerCustomerCreateResponse, encoded="urn:Magento")

class customerCustomerInfoRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        customerId -- part customerId
        attributes -- part attributes
        """
        self._sessionId =  kw.get("sessionId")
        self._customerId =  kw.get("customerId")
        self._attributes =  kw.get("attributes")
customerCustomerInfoRequest.typecode = Struct(pname=("urn:Magento","customerCustomerInfo"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="customerId", aname="_customerId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.ArrayOfString_Def(pname="attributes", aname="_attributes", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=customerCustomerInfoRequest, encoded="urn:Magento")

class customerCustomerInfoResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        customerInfo -- part customerInfo
        """
        self._customerInfo =  kw.get("customerInfo")
customerCustomerInfoResponse.typecode = Struct(pname=("urn:Magento","customerCustomerInfoResponse"), ofwhat=[ns0.customerCustomerEntity_Def(pname="customerInfo", aname="_customerInfo", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=customerCustomerInfoResponse, encoded="urn:Magento")

class customerCustomerUpdateRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        customerId -- part customerId
        customerData -- part customerData
        """
        self._sessionId =  kw.get("sessionId")
        self._customerId =  kw.get("customerId")
        self._customerData =  kw.get("customerData")
customerCustomerUpdateRequest.typecode = Struct(pname=("urn:Magento","customerCustomerUpdate"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="customerId", aname="_customerId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.customerCustomerEntityToCreate_Def(pname="customerData", aname="_customerData", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=customerCustomerUpdateRequest, encoded="urn:Magento")

class customerCustomerUpdateResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
customerCustomerUpdateResponse.typecode = Struct(pname=("urn:Magento","customerCustomerUpdateResponse"), ofwhat=[ZSI.TC.Boolean(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=customerCustomerUpdateResponse, encoded="urn:Magento")

class customerCustomerDeleteRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        customerId -- part customerId
        """
        self._sessionId =  kw.get("sessionId")
        self._customerId =  kw.get("customerId")
customerCustomerDeleteRequest.typecode = Struct(pname=("urn:Magento","customerCustomerDelete"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="customerId", aname="_customerId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=customerCustomerDeleteRequest, encoded="urn:Magento")

class customerCustomerDeleteResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
customerCustomerDeleteResponse.typecode = Struct(pname=("urn:Magento","customerCustomerDeleteResponse"), ofwhat=[ZSI.TC.Boolean(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=customerCustomerDeleteResponse, encoded="urn:Magento")

class customerGroupListRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        """
        self._sessionId =  kw.get("sessionId")
customerGroupListRequest.typecode = Struct(pname=("urn:Magento","customerGroupList"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=customerGroupListRequest, encoded="urn:Magento")

class customerGroupListResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
customerGroupListResponse.typecode = Struct(pname=("urn:Magento","customerGroupListResponse"), ofwhat=[ns0.customerGroupEntityArray_Def(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=customerGroupListResponse, encoded="urn:Magento")

class customerAddressListRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        customerId -- part customerId
        """
        self._sessionId =  kw.get("sessionId")
        self._customerId =  kw.get("customerId")
customerAddressListRequest.typecode = Struct(pname=("urn:Magento","customerAddressList"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="customerId", aname="_customerId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=customerAddressListRequest, encoded="urn:Magento")

class customerAddressListResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
customerAddressListResponse.typecode = Struct(pname=("urn:Magento","customerAddressListResponse"), ofwhat=[ns0.customerAddressEntityArray_Def(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=customerAddressListResponse, encoded="urn:Magento")

class customerAddressCreateRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        customerId -- part customerId
        addressData -- part addressData
        """
        self._sessionId =  kw.get("sessionId")
        self._customerId =  kw.get("customerId")
        self._addressData =  kw.get("addressData")
customerAddressCreateRequest.typecode = Struct(pname=("urn:Magento","customerAddressCreate"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="customerId", aname="_customerId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.customerAddressEntityCreate_Def(pname="addressData", aname="_addressData", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=customerAddressCreateRequest, encoded="urn:Magento")

class customerAddressCreateResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
customerAddressCreateResponse.typecode = Struct(pname=("urn:Magento","customerAddressCreateResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=customerAddressCreateResponse, encoded="urn:Magento")

class customerAddressInfoRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        addressId -- part addressId
        """
        self._sessionId =  kw.get("sessionId")
        self._addressId =  kw.get("addressId")
customerAddressInfoRequest.typecode = Struct(pname=("urn:Magento","customerAddressInfo"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="addressId", aname="_addressId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=customerAddressInfoRequest, encoded="urn:Magento")

class customerAddressInfoResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        info -- part info
        """
        self._info =  kw.get("info")
customerAddressInfoResponse.typecode = Struct(pname=("urn:Magento","customerAddressInfoResponse"), ofwhat=[ns0.customerAddressEntityItem_Def(pname="info", aname="_info", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=customerAddressInfoResponse, encoded="urn:Magento")

class customerAddressUpdateRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        addressId -- part addressId
        addressData -- part addressData
        """
        self._sessionId =  kw.get("sessionId")
        self._addressId =  kw.get("addressId")
        self._addressData =  kw.get("addressData")
customerAddressUpdateRequest.typecode = Struct(pname=("urn:Magento","customerAddressUpdate"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="addressId", aname="_addressId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.customerAddressEntityCreate_Def(pname="addressData", aname="_addressData", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=customerAddressUpdateRequest, encoded="urn:Magento")

class customerAddressUpdateResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        info -- part info
        """
        self._info =  kw.get("info")
customerAddressUpdateResponse.typecode = Struct(pname=("urn:Magento","customerAddressUpdateResponse"), ofwhat=[ZSI.TC.Boolean(pname="info", aname="_info", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=customerAddressUpdateResponse, encoded="urn:Magento")

class customerAddressDeleteRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        addressId -- part addressId
        """
        self._sessionId =  kw.get("sessionId")
        self._addressId =  kw.get("addressId")
customerAddressDeleteRequest.typecode = Struct(pname=("urn:Magento","customerAddressDelete"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="addressId", aname="_addressId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=customerAddressDeleteRequest, encoded="urn:Magento")

class customerAddressDeleteResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        info -- part info
        """
        self._info =  kw.get("info")
customerAddressDeleteResponse.typecode = Struct(pname=("urn:Magento","customerAddressDeleteResponse"), ofwhat=[ZSI.TC.Boolean(pname="info", aname="_info", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=customerAddressDeleteResponse, encoded="urn:Magento")

class catalogCategoryCurrentStoreRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        storeView -- part storeView
        """
        self._sessionId =  kw.get("sessionId")
        self._storeView =  kw.get("storeView")
catalogCategoryCurrentStoreRequest.typecode = Struct(pname=("urn:Magento","catalogCategoryCurrentStore"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="storeView", aname="_storeView", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogCategoryCurrentStoreRequest, encoded="urn:Magento")

class catalogCategoryCurrentStoreResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        storeView -- part storeView
        """
        self._storeView =  kw.get("storeView")
catalogCategoryCurrentStoreResponse.typecode = Struct(pname=("urn:Magento","catalogCategoryCurrentStoreResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="storeView", aname="_storeView", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogCategoryCurrentStoreResponse, encoded="urn:Magento")

class catalogCategoryTreeRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        parentId -- part parentId
        storeView -- part storeView
        """
        self._sessionId =  kw.get("sessionId")
        self._parentId =  kw.get("parentId")
        self._storeView =  kw.get("storeView")
catalogCategoryTreeRequest.typecode = Struct(pname=("urn:Magento","catalogCategoryTree"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="parentId", aname="_parentId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="storeView", aname="_storeView", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogCategoryTreeRequest, encoded="urn:Magento")

class catalogCategoryTreeResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        tree -- part tree
        """
        self._tree =  kw.get("tree")
catalogCategoryTreeResponse.typecode = Struct(pname=("urn:Magento","catalogCategoryTreeResponse"), ofwhat=[ns0.catalogCategoryTree_Def(pname="tree", aname="_tree", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogCategoryTreeResponse, encoded="urn:Magento")

class catalogCategoryLevelRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        website -- part website
        storeView -- part storeView
        parentCategory -- part parentCategory
        """
        self._sessionId =  kw.get("sessionId")
        self._website =  kw.get("website")
        self._storeView =  kw.get("storeView")
        self._parentCategory =  kw.get("parentCategory")
catalogCategoryLevelRequest.typecode = Struct(pname=("urn:Magento","catalogCategoryLevel"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="website", aname="_website", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="storeView", aname="_storeView", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="parentCategory", aname="_parentCategory", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogCategoryLevelRequest, encoded="urn:Magento")

class catalogCategoryLevelResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        tree -- part tree
        """
        self._tree =  kw.get("tree")
catalogCategoryLevelResponse.typecode = Struct(pname=("urn:Magento","catalogCategoryLevelResponse"), ofwhat=[ns0.ArrayOfCatalogCategoryEntitiesNoChildren_Def(pname="tree", aname="_tree", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogCategoryLevelResponse, encoded="urn:Magento")

class catalogCategoryInfoRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        categoryId -- part categoryId
        storeView -- part storeView
        attributes -- part attributes
        """
        self._sessionId =  kw.get("sessionId")
        self._categoryId =  kw.get("categoryId")
        self._storeView =  kw.get("storeView")
        self._attributes =  kw.get("attributes")
catalogCategoryInfoRequest.typecode = Struct(pname=("urn:Magento","catalogCategoryInfo"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="categoryId", aname="_categoryId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="storeView", aname="_storeView", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.ArrayOfString_Def(pname="attributes", aname="_attributes", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogCategoryInfoRequest, encoded="urn:Magento")

class catalogCategoryInfoResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        info -- part info
        """
        self._info =  kw.get("info")
catalogCategoryInfoResponse.typecode = Struct(pname=("urn:Magento","catalogCategoryInfoResponse"), ofwhat=[ns0.catalogCategoryInfo_Def(pname="info", aname="_info", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogCategoryInfoResponse, encoded="urn:Magento")

class catalogCategoryCreateRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        parentId -- part parentId
        categoryData -- part categoryData
        storeView -- part storeView
        """
        self._sessionId =  kw.get("sessionId")
        self._parentId =  kw.get("parentId")
        self._categoryData =  kw.get("categoryData")
        self._storeView =  kw.get("storeView")
catalogCategoryCreateRequest.typecode = Struct(pname=("urn:Magento","catalogCategoryCreate"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="parentId", aname="_parentId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.catalogCategoryEntityCreate_Def(pname="categoryData", aname="_categoryData", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="storeView", aname="_storeView", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogCategoryCreateRequest, encoded="urn:Magento")

class catalogCategoryCreateResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        attribute_id -- part attribute_id
        """
        self._attribute_id =  kw.get("attribute_id")
catalogCategoryCreateResponse.typecode = Struct(pname=("urn:Magento","catalogCategoryCreateResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="attribute_id", aname="_attribute_id", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogCategoryCreateResponse, encoded="urn:Magento")

class catalogCategoryUpdateRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        categoryId -- part categoryId
        categoryData -- part categoryData
        storeView -- part storeView
        """
        self._sessionId =  kw.get("sessionId")
        self._categoryId =  kw.get("categoryId")
        self._categoryData =  kw.get("categoryData")
        self._storeView =  kw.get("storeView")
catalogCategoryUpdateRequest.typecode = Struct(pname=("urn:Magento","catalogCategoryUpdate"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="categoryId", aname="_categoryId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.catalogCategoryEntityCreate_Def(pname="categoryData", aname="_categoryData", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="storeView", aname="_storeView", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogCategoryUpdateRequest, encoded="urn:Magento")

class catalogCategoryUpdateResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        id -- part id
        """
        self._id =  kw.get("id")
catalogCategoryUpdateResponse.typecode = Struct(pname=("urn:Magento","catalogCategoryUpdateResponse"), ofwhat=[ZSI.TC.Boolean(pname="id", aname="_id", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogCategoryUpdateResponse, encoded="urn:Magento")

class catalogCategoryMoveRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        categoryId -- part categoryId
        parentId -- part parentId
        afterId -- part afterId
        """
        self._sessionId =  kw.get("sessionId")
        self._categoryId =  kw.get("categoryId")
        self._parentId =  kw.get("parentId")
        self._afterId =  kw.get("afterId")
catalogCategoryMoveRequest.typecode = Struct(pname=("urn:Magento","catalogCategoryMove"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="categoryId", aname="_categoryId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="parentId", aname="_parentId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="afterId", aname="_afterId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogCategoryMoveRequest, encoded="urn:Magento")

class catalogCategoryMoveResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        id -- part id
        """
        self._id =  kw.get("id")
catalogCategoryMoveResponse.typecode = Struct(pname=("urn:Magento","catalogCategoryMoveResponse"), ofwhat=[ZSI.TC.Boolean(pname="id", aname="_id", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogCategoryMoveResponse, encoded="urn:Magento")

class catalogCategoryDeleteRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        categoryId -- part categoryId
        """
        self._sessionId =  kw.get("sessionId")
        self._categoryId =  kw.get("categoryId")
catalogCategoryDeleteRequest.typecode = Struct(pname=("urn:Magento","catalogCategoryDelete"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="categoryId", aname="_categoryId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogCategoryDeleteRequest, encoded="urn:Magento")

class catalogCategoryDeleteResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
catalogCategoryDeleteResponse.typecode = Struct(pname=("urn:Magento","catalogCategoryDeleteResponse"), ofwhat=[ZSI.TC.Boolean(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogCategoryDeleteResponse, encoded="urn:Magento")

class catalogCategoryAssignedProductsRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        categoryId -- part categoryId
        """
        self._sessionId =  kw.get("sessionId")
        self._categoryId =  kw.get("categoryId")
catalogCategoryAssignedProductsRequest.typecode = Struct(pname=("urn:Magento","catalogCategoryAssignedProducts"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="categoryId", aname="_categoryId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogCategoryAssignedProductsRequest, encoded="urn:Magento")

class catalogCategoryAssignedProductsResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
catalogCategoryAssignedProductsResponse.typecode = Struct(pname=("urn:Magento","catalogCategoryAssignedProductsResponse"), ofwhat=[ns0.catalogAssignedProductArray_Def(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogCategoryAssignedProductsResponse, encoded="urn:Magento")

class catalogCategoryAssignProductRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        categoryId -- part categoryId
        product -- part product
        position -- part position
        productIdentifierType -- part productIdentifierType
        """
        self._sessionId =  kw.get("sessionId")
        self._categoryId =  kw.get("categoryId")
        self._product =  kw.get("product")
        self._position =  kw.get("position")
        self._productIdentifierType =  kw.get("productIdentifierType")
catalogCategoryAssignProductRequest.typecode = Struct(pname=("urn:Magento","catalogCategoryAssignProduct"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="categoryId", aname="_categoryId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="product", aname="_product", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="position", aname="_position", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="productIdentifierType", aname="_productIdentifierType", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogCategoryAssignProductRequest, encoded="urn:Magento")

class catalogCategoryAssignProductResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
catalogCategoryAssignProductResponse.typecode = Struct(pname=("urn:Magento","catalogCategoryAssignProductResponse"), ofwhat=[ZSI.TC.Boolean(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogCategoryAssignProductResponse, encoded="urn:Magento")

class catalogCategoryUpdateProductRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        categoryId -- part categoryId
        product -- part product
        position -- part position
        productIdentifierType -- part productIdentifierType
        """
        self._sessionId =  kw.get("sessionId")
        self._categoryId =  kw.get("categoryId")
        self._product =  kw.get("product")
        self._position =  kw.get("position")
        self._productIdentifierType =  kw.get("productIdentifierType")
catalogCategoryUpdateProductRequest.typecode = Struct(pname=("urn:Magento","catalogCategoryUpdateProduct"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="categoryId", aname="_categoryId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="product", aname="_product", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="position", aname="_position", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="productIdentifierType", aname="_productIdentifierType", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogCategoryUpdateProductRequest, encoded="urn:Magento")

class catalogCategoryUpdateProductResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
catalogCategoryUpdateProductResponse.typecode = Struct(pname=("urn:Magento","catalogCategoryUpdateProductResponse"), ofwhat=[ZSI.TC.Boolean(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogCategoryUpdateProductResponse, encoded="urn:Magento")

class catalogCategoryRemoveProductRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        categoryId -- part categoryId
        product -- part product
        productIdentifierType -- part productIdentifierType
        """
        self._sessionId =  kw.get("sessionId")
        self._categoryId =  kw.get("categoryId")
        self._product =  kw.get("product")
        self._productIdentifierType =  kw.get("productIdentifierType")
catalogCategoryRemoveProductRequest.typecode = Struct(pname=("urn:Magento","catalogCategoryRemoveProduct"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="categoryId", aname="_categoryId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="product", aname="_product", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="productIdentifierType", aname="_productIdentifierType", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogCategoryRemoveProductRequest, encoded="urn:Magento")

class catalogCategoryRemoveProductResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
catalogCategoryRemoveProductResponse.typecode = Struct(pname=("urn:Magento","catalogCategoryRemoveProductResponse"), ofwhat=[ZSI.TC.Boolean(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogCategoryRemoveProductResponse, encoded="urn:Magento")

class catalogProductCurrentStoreRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        storeView -- part storeView
        """
        self._sessionId =  kw.get("sessionId")
        self._storeView =  kw.get("storeView")
catalogProductCurrentStoreRequest.typecode = Struct(pname=("urn:Magento","catalogProductCurrentStore"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="storeView", aname="_storeView", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductCurrentStoreRequest, encoded="urn:Magento")

class catalogProductCurrentStoreResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        storeView -- part storeView
        """
        self._storeView =  kw.get("storeView")
catalogProductCurrentStoreResponse.typecode = Struct(pname=("urn:Magento","catalogProductCurrentStoreResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="storeView", aname="_storeView", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductCurrentStoreResponse, encoded="urn:Magento")

class catalogProductListOfAdditionalAttributesRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        productType -- part productType
        attributeSetId -- part attributeSetId
        """
        self._sessionId =  kw.get("sessionId")
        self._productType =  kw.get("productType")
        self._attributeSetId =  kw.get("attributeSetId")
catalogProductListOfAdditionalAttributesRequest.typecode = Struct(pname=("urn:Magento","catalogProductListOfAdditionalAttributes"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="productType", aname="_productType", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="attributeSetId", aname="_attributeSetId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductListOfAdditionalAttributesRequest, encoded="urn:Magento")

class catalogProductListOfAdditionalAttributesResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
catalogProductListOfAdditionalAttributesResponse.typecode = Struct(pname=("urn:Magento","catalogProductListOfAdditionalAttributesResponse"), ofwhat=[ns0.catalogAttributeEntityArray_Def(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductListOfAdditionalAttributesResponse, encoded="urn:Magento")

class catalogProductListRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        filters -- part filters
        storeView -- part storeView
        """
        self._sessionId =  kw.get("sessionId")
        self._filters =  kw.get("filters")
        self._storeView =  kw.get("storeView")
catalogProductListRequest.typecode = Struct(pname=("urn:Magento","catalogProductList"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.filters_Def(pname="filters", aname="_filters", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="storeView", aname="_storeView", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductListRequest, encoded="urn:Magento")

class catalogProductListResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        storeView -- part storeView
        """
        self._storeView =  kw.get("storeView")
catalogProductListResponse.typecode = Struct(pname=("urn:Magento","catalogProductListResponse"), ofwhat=[ns0.catalogProductEntityArray_Def(pname="storeView", aname="_storeView", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductListResponse, encoded="urn:Magento")

class catalogProductInfoRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        product -- part product
        storeView -- part storeView
        attributes -- part attributes
        productIdentifierType -- part productIdentifierType
        """
        self._sessionId =  kw.get("sessionId")
        self._product =  kw.get("product")
        self._storeView =  kw.get("storeView")
        self._attributes =  kw.get("attributes")
        self._productIdentifierType =  kw.get("productIdentifierType")
catalogProductInfoRequest.typecode = Struct(pname=("urn:Magento","catalogProductInfo"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="product", aname="_product", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="storeView", aname="_storeView", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.catalogProductRequestAttributes_Def(pname="attributes", aname="_attributes", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="productIdentifierType", aname="_productIdentifierType", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductInfoRequest, encoded="urn:Magento")

class catalogProductInfoResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        info -- part info
        """
        self._info =  kw.get("info")
catalogProductInfoResponse.typecode = Struct(pname=("urn:Magento","catalogProductInfoResponse"), ofwhat=[ns0.catalogProductReturnEntity_Def(pname="info", aname="_info", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductInfoResponse, encoded="urn:Magento")

class catalogProductCreateRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        type -- part type
        set -- part set
        sku -- part sku
        productData -- part productData
        storeView -- part storeView
        """
        self._sessionId =  kw.get("sessionId")
        self._type =  kw.get("type")
        self._set =  kw.get("set")
        self._sku =  kw.get("sku")
        self._productData =  kw.get("productData")
        self._storeView =  kw.get("storeView")
catalogProductCreateRequest.typecode = Struct(pname=("urn:Magento","catalogProductCreate"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="type", aname="_type", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="set", aname="_set", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="sku", aname="_sku", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.catalogProductCreateEntity_Def(pname="productData", aname="_productData", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="storeView", aname="_storeView", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductCreateRequest, encoded="urn:Magento")

class catalogProductCreateResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
catalogProductCreateResponse.typecode = Struct(pname=("urn:Magento","catalogProductCreateResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductCreateResponse, encoded="urn:Magento")

class catalogProductUpdateRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        product -- part product
        productData -- part productData
        storeView -- part storeView
        productIdentifierType -- part productIdentifierType
        """
        self._sessionId =  kw.get("sessionId")
        self._product =  kw.get("product")
        self._productData =  kw.get("productData")
        self._storeView =  kw.get("storeView")
        self._productIdentifierType =  kw.get("productIdentifierType")
catalogProductUpdateRequest.typecode = Struct(pname=("urn:Magento","catalogProductUpdate"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="product", aname="_product", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.catalogProductCreateEntity_Def(pname="productData", aname="_productData", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="storeView", aname="_storeView", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="productIdentifierType", aname="_productIdentifierType", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductUpdateRequest, encoded="urn:Magento")

class catalogProductUpdateResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
catalogProductUpdateResponse.typecode = Struct(pname=("urn:Magento","catalogProductUpdateResponse"), ofwhat=[ZSI.TC.Boolean(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductUpdateResponse, encoded="urn:Magento")

class catalogProductSetSpecialPriceRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        product -- part product
        specialPrice -- part specialPrice
        fromDate -- part fromDate
        toDate -- part toDate
        storeView -- part storeView
        productIdentifierType -- part productIdentifierType
        """
        self._sessionId =  kw.get("sessionId")
        self._product =  kw.get("product")
        self._specialPrice =  kw.get("specialPrice")
        self._fromDate =  kw.get("fromDate")
        self._toDate =  kw.get("toDate")
        self._storeView =  kw.get("storeView")
        self._productIdentifierType =  kw.get("productIdentifierType")
catalogProductSetSpecialPriceRequest.typecode = Struct(pname=("urn:Magento","catalogProductSetSpecialPrice"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="product", aname="_product", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="specialPrice", aname="_specialPrice", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="fromDate", aname="_fromDate", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="toDate", aname="_toDate", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="storeView", aname="_storeView", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="productIdentifierType", aname="_productIdentifierType", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductSetSpecialPriceRequest, encoded="urn:Magento")

class catalogProductSetSpecialPriceResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
catalogProductSetSpecialPriceResponse.typecode = Struct(pname=("urn:Magento","catalogProductSetSpecialPriceResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductSetSpecialPriceResponse, encoded="urn:Magento")

class catalogProductGetSpecialPriceRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        product -- part product
        storeView -- part storeView
        productIdentifierType -- part productIdentifierType
        """
        self._sessionId =  kw.get("sessionId")
        self._product =  kw.get("product")
        self._storeView =  kw.get("storeView")
        self._productIdentifierType =  kw.get("productIdentifierType")
catalogProductGetSpecialPriceRequest.typecode = Struct(pname=("urn:Magento","catalogProductGetSpecialPrice"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="product", aname="_product", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="storeView", aname="_storeView", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="productIdentifierType", aname="_productIdentifierType", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductGetSpecialPriceRequest, encoded="urn:Magento")

class catalogProductGetSpecialPriceResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
catalogProductGetSpecialPriceResponse.typecode = Struct(pname=("urn:Magento","catalogProductGetSpecialPriceResponse"), ofwhat=[ns0.catalogProductReturnEntity_Def(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductGetSpecialPriceResponse, encoded="urn:Magento")

class catalogProductDeleteRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        product -- part product
        productIdentifierType -- part productIdentifierType
        """
        self._sessionId =  kw.get("sessionId")
        self._product =  kw.get("product")
        self._productIdentifierType =  kw.get("productIdentifierType")
catalogProductDeleteRequest.typecode = Struct(pname=("urn:Magento","catalogProductDelete"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="product", aname="_product", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="productIdentifierType", aname="_productIdentifierType", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductDeleteRequest, encoded="urn:Magento")

class catalogProductDeleteResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
catalogProductDeleteResponse.typecode = Struct(pname=("urn:Magento","catalogProductDeleteResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductDeleteResponse, encoded="urn:Magento")

class catalogProductAttributeCurrentStoreRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        storeView -- part storeView
        """
        self._sessionId =  kw.get("sessionId")
        self._storeView =  kw.get("storeView")
catalogProductAttributeCurrentStoreRequest.typecode = Struct(pname=("urn:Magento","catalogProductAttributeCurrentStore"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="storeView", aname="_storeView", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductAttributeCurrentStoreRequest, encoded="urn:Magento")

class catalogProductAttributeCurrentStoreResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        storeView -- part storeView
        """
        self._storeView =  kw.get("storeView")
catalogProductAttributeCurrentStoreResponse.typecode = Struct(pname=("urn:Magento","catalogProductAttributeCurrentStoreResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="storeView", aname="_storeView", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductAttributeCurrentStoreResponse, encoded="urn:Magento")

class catalogProductAttributeSetCreateRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        attributeSetName -- part attributeSetName
        skeletonSetId -- part skeletonSetId
        """
        self._sessionId =  kw.get("sessionId")
        self._attributeSetName =  kw.get("attributeSetName")
        self._skeletonSetId =  kw.get("skeletonSetId")
catalogProductAttributeSetCreateRequest.typecode = Struct(pname=("urn:Magento","catalogProductAttributeSetCreate"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="attributeSetName", aname="_attributeSetName", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="skeletonSetId", aname="_skeletonSetId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductAttributeSetCreateRequest, encoded="urn:Magento")

class catalogProductAttributeSetCreateResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        setId -- part setId
        """
        self._setId =  kw.get("setId")
catalogProductAttributeSetCreateResponse.typecode = Struct(pname=("urn:Magento","catalogProductAttributeSetCreateResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="setId", aname="_setId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductAttributeSetCreateResponse, encoded="urn:Magento")

class catalogProductAttributeListRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        setId -- part setId
        """
        self._sessionId =  kw.get("sessionId")
        self._setId =  kw.get("setId")
catalogProductAttributeListRequest.typecode = Struct(pname=("urn:Magento","catalogProductAttributeList"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="setId", aname="_setId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductAttributeListRequest, encoded="urn:Magento")

class catalogProductAttributeListResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
catalogProductAttributeListResponse.typecode = Struct(pname=("urn:Magento","catalogProductAttributeListResponse"), ofwhat=[ns0.catalogAttributeEntityArray_Def(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductAttributeListResponse, encoded="urn:Magento")

class catalogProductAttributeOptionsRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        attributeId -- part attributeId
        storeView -- part storeView
        """
        self._sessionId =  kw.get("sessionId")
        self._attributeId =  kw.get("attributeId")
        self._storeView =  kw.get("storeView")
catalogProductAttributeOptionsRequest.typecode = Struct(pname=("urn:Magento","catalogProductAttributeOptions"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="attributeId", aname="_attributeId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="storeView", aname="_storeView", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductAttributeOptionsRequest, encoded="urn:Magento")

class catalogProductAttributeOptionsResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
catalogProductAttributeOptionsResponse.typecode = Struct(pname=("urn:Magento","catalogProductAttributeOptionsResponse"), ofwhat=[ns0.catalogAttributeOptionEntityArray_Def(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductAttributeOptionsResponse, encoded="urn:Magento")

class catalogProductAttributeSetRemoveRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        attributeSetId -- part attributeSetId
        forceProductsRemove -- part forceProductsRemove
        """
        self._sessionId =  kw.get("sessionId")
        self._attributeSetId =  kw.get("attributeSetId")
        self._forceProductsRemove =  kw.get("forceProductsRemove")
catalogProductAttributeSetRemoveRequest.typecode = Struct(pname=("urn:Magento","catalogProductAttributeSetRemove"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="attributeSetId", aname="_attributeSetId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="forceProductsRemove", aname="_forceProductsRemove", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductAttributeSetRemoveRequest, encoded="urn:Magento")

class catalogProductAttributeSetRemoveResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        isRemoved -- part isRemoved
        """
        self._isRemoved =  kw.get("isRemoved")
catalogProductAttributeSetRemoveResponse.typecode = Struct(pname=("urn:Magento","catalogProductAttributeSetRemoveResponse"), ofwhat=[ZSI.TC.Boolean(pname="isRemoved", aname="_isRemoved", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductAttributeSetRemoveResponse, encoded="urn:Magento")

class catalogProductAttributeSetListRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        """
        self._sessionId =  kw.get("sessionId")
catalogProductAttributeSetListRequest.typecode = Struct(pname=("urn:Magento","catalogProductAttributeSetList"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductAttributeSetListRequest, encoded="urn:Magento")

class catalogProductAttributeSetListResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
catalogProductAttributeSetListResponse.typecode = Struct(pname=("urn:Magento","catalogProductAttributeSetListResponse"), ofwhat=[ns0.catalogProductAttributeSetEntityArray_Def(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductAttributeSetListResponse, encoded="urn:Magento")

class catalogProductAttributeSetAttributeAddRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        attributeId -- part attributeId
        attributeSetId -- part attributeSetId
        attributeGroupId -- part attributeGroupId
        sortOrder -- part sortOrder
        """
        self._sessionId =  kw.get("sessionId")
        self._attributeId =  kw.get("attributeId")
        self._attributeSetId =  kw.get("attributeSetId")
        self._attributeGroupId =  kw.get("attributeGroupId")
        self._sortOrder =  kw.get("sortOrder")
catalogProductAttributeSetAttributeAddRequest.typecode = Struct(pname=("urn:Magento","catalogProductAttributeSetAttributeAdd"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="attributeId", aname="_attributeId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="attributeSetId", aname="_attributeSetId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="attributeGroupId", aname="_attributeGroupId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="sortOrder", aname="_sortOrder", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductAttributeSetAttributeAddRequest, encoded="urn:Magento")

class catalogProductAttributeSetAttributeAddResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        isAdded -- part isAdded
        """
        self._isAdded =  kw.get("isAdded")
catalogProductAttributeSetAttributeAddResponse.typecode = Struct(pname=("urn:Magento","catalogProductAttributeSetAttributeAddResponse"), ofwhat=[ZSI.TC.Boolean(pname="isAdded", aname="_isAdded", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductAttributeSetAttributeAddResponse, encoded="urn:Magento")

class catalogProductAttributeSetAttributeRemoveRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        attributeId -- part attributeId
        attributeSetId -- part attributeSetId
        """
        self._sessionId =  kw.get("sessionId")
        self._attributeId =  kw.get("attributeId")
        self._attributeSetId =  kw.get("attributeSetId")
catalogProductAttributeSetAttributeRemoveRequest.typecode = Struct(pname=("urn:Magento","catalogProductAttributeSetAttributeRemove"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="attributeId", aname="_attributeId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="attributeSetId", aname="_attributeSetId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductAttributeSetAttributeRemoveRequest, encoded="urn:Magento")

class catalogProductAttributeSetAttributeRemoveResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        isRemoved -- part isRemoved
        """
        self._isRemoved =  kw.get("isRemoved")
catalogProductAttributeSetAttributeRemoveResponse.typecode = Struct(pname=("urn:Magento","catalogProductAttributeSetAttributeRemoveResponse"), ofwhat=[ZSI.TC.Boolean(pname="isRemoved", aname="_isRemoved", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductAttributeSetAttributeRemoveResponse, encoded="urn:Magento")

class catalogProductAttributeSetGroupAddRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        attributeSetId -- part attributeSetId
        groupName -- part groupName
        """
        self._sessionId =  kw.get("sessionId")
        self._attributeSetId =  kw.get("attributeSetId")
        self._groupName =  kw.get("groupName")
catalogProductAttributeSetGroupAddRequest.typecode = Struct(pname=("urn:Magento","catalogProductAttributeSetGroupAdd"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="attributeSetId", aname="_attributeSetId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="groupName", aname="_groupName", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductAttributeSetGroupAddRequest, encoded="urn:Magento")

class catalogProductAttributeSetGroupAddResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
catalogProductAttributeSetGroupAddResponse.typecode = Struct(pname=("urn:Magento","catalogProductAttributeSetGroupAddResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductAttributeSetGroupAddResponse, encoded="urn:Magento")

class catalogProductAttributeSetGroupRenameRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        groupId -- part groupId
        groupName -- part groupName
        """
        self._sessionId =  kw.get("sessionId")
        self._groupId =  kw.get("groupId")
        self._groupName =  kw.get("groupName")
catalogProductAttributeSetGroupRenameRequest.typecode = Struct(pname=("urn:Magento","catalogProductAttributeSetGroupRename"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="groupId", aname="_groupId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="groupName", aname="_groupName", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductAttributeSetGroupRenameRequest, encoded="urn:Magento")

class catalogProductAttributeSetGroupRenameResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
catalogProductAttributeSetGroupRenameResponse.typecode = Struct(pname=("urn:Magento","catalogProductAttributeSetGroupRenameResponse"), ofwhat=[ZSI.TC.Boolean(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductAttributeSetGroupRenameResponse, encoded="urn:Magento")

class catalogProductAttributeSetGroupRemoveRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        attributeGroupId -- part attributeGroupId
        """
        self._sessionId =  kw.get("sessionId")
        self._attributeGroupId =  kw.get("attributeGroupId")
catalogProductAttributeSetGroupRemoveRequest.typecode = Struct(pname=("urn:Magento","catalogProductAttributeSetGroupRemove"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="attributeGroupId", aname="_attributeGroupId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductAttributeSetGroupRemoveRequest, encoded="urn:Magento")

class catalogProductAttributeSetGroupRemoveResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
catalogProductAttributeSetGroupRemoveResponse.typecode = Struct(pname=("urn:Magento","catalogProductAttributeSetGroupRemoveResponse"), ofwhat=[ZSI.TC.Boolean(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductAttributeSetGroupRemoveResponse, encoded="urn:Magento")

class catalogProductAttributeTypesRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        """
        self._sessionId =  kw.get("sessionId")
catalogProductAttributeTypesRequest.typecode = Struct(pname=("urn:Magento","catalogProductAttributeTypes"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductAttributeTypesRequest, encoded="urn:Magento")

class catalogProductAttributeTypesResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
catalogProductAttributeTypesResponse.typecode = Struct(pname=("urn:Magento","catalogProductAttributeTypesResponse"), ofwhat=[ns0.catalogAttributeOptionEntityArray_Def(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductAttributeTypesResponse, encoded="urn:Magento")

class catalogProductAttributeCreateRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        data -- part data
        """
        self._sessionId =  kw.get("sessionId")
        self._data =  kw.get("data")
catalogProductAttributeCreateRequest.typecode = Struct(pname=("urn:Magento","catalogProductAttributeCreate"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.catalogProductAttributeEntityToCreate_Def(pname="data", aname="_data", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductAttributeCreateRequest, encoded="urn:Magento")

class catalogProductAttributeCreateResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
catalogProductAttributeCreateResponse.typecode = Struct(pname=("urn:Magento","catalogProductAttributeCreateResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductAttributeCreateResponse, encoded="urn:Magento")

class catalogCategoryAttributeCurrentStoreRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        storeView -- part storeView
        """
        self._sessionId =  kw.get("sessionId")
        self._storeView =  kw.get("storeView")
catalogCategoryAttributeCurrentStoreRequest.typecode = Struct(pname=("urn:Magento","catalogCategoryAttributeCurrentStore"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="storeView", aname="_storeView", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogCategoryAttributeCurrentStoreRequest, encoded="urn:Magento")

class catalogCategoryAttributeCurrentStoreResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        storeView -- part storeView
        """
        self._storeView =  kw.get("storeView")
catalogCategoryAttributeCurrentStoreResponse.typecode = Struct(pname=("urn:Magento","catalogCategoryAttributeCurrentStoreResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="storeView", aname="_storeView", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogCategoryAttributeCurrentStoreResponse, encoded="urn:Magento")

class catalogProductAttributeMediaCurrentStoreRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        storeView -- part storeView
        """
        self._sessionId =  kw.get("sessionId")
        self._storeView =  kw.get("storeView")
catalogProductAttributeMediaCurrentStoreRequest.typecode = Struct(pname=("urn:Magento","catalogProductAttributeMediaCurrentStore"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="storeView", aname="_storeView", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductAttributeMediaCurrentStoreRequest, encoded="urn:Magento")

class catalogProductAttributeMediaCurrentStoreResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        storeView -- part storeView
        """
        self._storeView =  kw.get("storeView")
catalogProductAttributeMediaCurrentStoreResponse.typecode = Struct(pname=("urn:Magento","catalogProductAttributeMediaCurrentStoreResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="storeView", aname="_storeView", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductAttributeMediaCurrentStoreResponse, encoded="urn:Magento")

class catalogProductAttributeRemoveRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        attribute -- part attribute
        """
        self._sessionId =  kw.get("sessionId")
        self._attribute =  kw.get("attribute")
catalogProductAttributeRemoveRequest.typecode = Struct(pname=("urn:Magento","catalogProductAttributeRemove"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="attribute", aname="_attribute", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductAttributeRemoveRequest, encoded="urn:Magento")

class catalogProductAttributeRemoveResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
catalogProductAttributeRemoveResponse.typecode = Struct(pname=("urn:Magento","catalogProductAttributeRemoveResponse"), ofwhat=[ZSI.TC.Boolean(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductAttributeRemoveResponse, encoded="urn:Magento")

class catalogProductAttributeInfoRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        attribute -- part attribute
        """
        self._sessionId =  kw.get("sessionId")
        self._attribute =  kw.get("attribute")
catalogProductAttributeInfoRequest.typecode = Struct(pname=("urn:Magento","catalogProductAttributeInfo"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="attribute", aname="_attribute", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductAttributeInfoRequest, encoded="urn:Magento")

class catalogProductAttributeInfoResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
catalogProductAttributeInfoResponse.typecode = Struct(pname=("urn:Magento","catalogProductAttributeInfoResponse"), ofwhat=[ns0.catalogProductAttributeEntity_Def(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductAttributeInfoResponse, encoded="urn:Magento")

class catalogProductAttributeUpdateRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        attribute -- part attribute
        data -- part data
        """
        self._sessionId =  kw.get("sessionId")
        self._attribute =  kw.get("attribute")
        self._data =  kw.get("data")
catalogProductAttributeUpdateRequest.typecode = Struct(pname=("urn:Magento","catalogProductAttributeUpdate"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="attribute", aname="_attribute", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.catalogProductAttributeEntityToUpdate_Def(pname="data", aname="_data", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductAttributeUpdateRequest, encoded="urn:Magento")

class catalogProductAttributeUpdateResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
catalogProductAttributeUpdateResponse.typecode = Struct(pname=("urn:Magento","catalogProductAttributeUpdateResponse"), ofwhat=[ZSI.TC.Boolean(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductAttributeUpdateResponse, encoded="urn:Magento")

class catalogProductAttributeAddOptionRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        attribute -- part attribute
        data -- part data
        """
        self._sessionId =  kw.get("sessionId")
        self._attribute =  kw.get("attribute")
        self._data =  kw.get("data")
catalogProductAttributeAddOptionRequest.typecode = Struct(pname=("urn:Magento","catalogProductAttributeAddOption"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="attribute", aname="_attribute", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.catalogProductAttributeOptionEntityToAdd_Def(pname="data", aname="_data", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductAttributeAddOptionRequest, encoded="urn:Magento")

class catalogProductAttributeAddOptionResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
catalogProductAttributeAddOptionResponse.typecode = Struct(pname=("urn:Magento","catalogProductAttributeAddOptionResponse"), ofwhat=[ZSI.TC.Boolean(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductAttributeAddOptionResponse, encoded="urn:Magento")

class catalogProductAttributeRemoveOptionRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        attribute -- part attribute
        optionId -- part optionId
        """
        self._sessionId =  kw.get("sessionId")
        self._attribute =  kw.get("attribute")
        self._optionId =  kw.get("optionId")
catalogProductAttributeRemoveOptionRequest.typecode = Struct(pname=("urn:Magento","catalogProductAttributeRemoveOption"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="attribute", aname="_attribute", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="optionId", aname="_optionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductAttributeRemoveOptionRequest, encoded="urn:Magento")

class catalogProductAttributeRemoveOptionResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
catalogProductAttributeRemoveOptionResponse.typecode = Struct(pname=("urn:Magento","catalogProductAttributeRemoveOptionResponse"), ofwhat=[ZSI.TC.Boolean(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductAttributeRemoveOptionResponse, encoded="urn:Magento")

class catalogProductTypeListRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        """
        self._sessionId =  kw.get("sessionId")
catalogProductTypeListRequest.typecode = Struct(pname=("urn:Magento","catalogProductTypeList"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductTypeListRequest, encoded="urn:Magento")

class catalogProductTypeListResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
catalogProductTypeListResponse.typecode = Struct(pname=("urn:Magento","catalogProductTypeListResponse"), ofwhat=[ns0.catalogProductTypeEntityArray_Def(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductTypeListResponse, encoded="urn:Magento")

class catalogProductAttributeTierPriceInfoRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        product -- part product
        productIdentifierType -- part productIdentifierType
        """
        self._sessionId =  kw.get("sessionId")
        self._product =  kw.get("product")
        self._productIdentifierType =  kw.get("productIdentifierType")
catalogProductAttributeTierPriceInfoRequest.typecode = Struct(pname=("urn:Magento","catalogProductAttributeTierPriceInfo"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="product", aname="_product", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="productIdentifierType", aname="_productIdentifierType", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductAttributeTierPriceInfoRequest, encoded="urn:Magento")

class catalogProductAttributeTierPriceInfoResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
catalogProductAttributeTierPriceInfoResponse.typecode = Struct(pname=("urn:Magento","catalogProductAttributeTierPriceInfoResponse"), ofwhat=[ns0.catalogProductTierPriceEntityArray_Def(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductAttributeTierPriceInfoResponse, encoded="urn:Magento")

class catalogProductAttributeTierPriceUpdateRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        product -- part product
        tier_price -- part tier_price
        productIdentifierType -- part productIdentifierType
        """
        self._sessionId =  kw.get("sessionId")
        self._product =  kw.get("product")
        self._tier_price =  kw.get("tier_price")
        self._productIdentifierType =  kw.get("productIdentifierType")
catalogProductAttributeTierPriceUpdateRequest.typecode = Struct(pname=("urn:Magento","catalogProductAttributeTierPriceUpdate"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="product", aname="_product", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.catalogProductTierPriceEntityArray_Def(pname="tier_price", aname="_tier_price", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="productIdentifierType", aname="_productIdentifierType", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductAttributeTierPriceUpdateRequest, encoded="urn:Magento")

class catalogProductAttributeTierPriceUpdateResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
catalogProductAttributeTierPriceUpdateResponse.typecode = Struct(pname=("urn:Magento","catalogProductAttributeTierPriceUpdateResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductAttributeTierPriceUpdateResponse, encoded="urn:Magento")

class catalogCategoryAttributeListRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        """
        self._sessionId =  kw.get("sessionId")
catalogCategoryAttributeListRequest.typecode = Struct(pname=("urn:Magento","catalogCategoryAttributeList"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogCategoryAttributeListRequest, encoded="urn:Magento")

class catalogCategoryAttributeListResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
catalogCategoryAttributeListResponse.typecode = Struct(pname=("urn:Magento","catalogCategoryAttributeListResponse"), ofwhat=[ns0.catalogAttributeEntityArray_Def(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogCategoryAttributeListResponse, encoded="urn:Magento")

class catalogCategoryAttributeOptionsRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        attributeId -- part attributeId
        storeView -- part storeView
        """
        self._sessionId =  kw.get("sessionId")
        self._attributeId =  kw.get("attributeId")
        self._storeView =  kw.get("storeView")
catalogCategoryAttributeOptionsRequest.typecode = Struct(pname=("urn:Magento","catalogCategoryAttributeOptions"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="attributeId", aname="_attributeId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="storeView", aname="_storeView", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogCategoryAttributeOptionsRequest, encoded="urn:Magento")

class catalogCategoryAttributeOptionsResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
catalogCategoryAttributeOptionsResponse.typecode = Struct(pname=("urn:Magento","catalogCategoryAttributeOptionsResponse"), ofwhat=[ns0.catalogAttributeOptionEntityArray_Def(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogCategoryAttributeOptionsResponse, encoded="urn:Magento")

class catalogProductAttributeMediaListRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        product -- part product
        storeView -- part storeView
        productIdentifierType -- part productIdentifierType
        """
        self._sessionId =  kw.get("sessionId")
        self._product =  kw.get("product")
        self._storeView =  kw.get("storeView")
        self._productIdentifierType =  kw.get("productIdentifierType")
catalogProductAttributeMediaListRequest.typecode = Struct(pname=("urn:Magento","catalogProductAttributeMediaList"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="product", aname="_product", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="storeView", aname="_storeView", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="productIdentifierType", aname="_productIdentifierType", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductAttributeMediaListRequest, encoded="urn:Magento")

class catalogProductAttributeMediaListResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
catalogProductAttributeMediaListResponse.typecode = Struct(pname=("urn:Magento","catalogProductAttributeMediaListResponse"), ofwhat=[ns0.catalogProductImageEntityArray_Def(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductAttributeMediaListResponse, encoded="urn:Magento")

class catalogProductAttributeMediaInfoRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        product -- part product
        file -- part file
        storeView -- part storeView
        productIdentifierType -- part productIdentifierType
        """
        self._sessionId =  kw.get("sessionId")
        self._product =  kw.get("product")
        self._file =  kw.get("file")
        self._storeView =  kw.get("storeView")
        self._productIdentifierType =  kw.get("productIdentifierType")
catalogProductAttributeMediaInfoRequest.typecode = Struct(pname=("urn:Magento","catalogProductAttributeMediaInfo"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="product", aname="_product", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="file", aname="_file", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="storeView", aname="_storeView", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="productIdentifierType", aname="_productIdentifierType", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductAttributeMediaInfoRequest, encoded="urn:Magento")

class catalogProductAttributeMediaInfoResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
catalogProductAttributeMediaInfoResponse.typecode = Struct(pname=("urn:Magento","catalogProductAttributeMediaInfoResponse"), ofwhat=[ns0.catalogProductImageEntity_Def(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductAttributeMediaInfoResponse, encoded="urn:Magento")

class catalogProductAttributeMediaTypesRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        setId -- part setId
        """
        self._sessionId =  kw.get("sessionId")
        self._setId =  kw.get("setId")
catalogProductAttributeMediaTypesRequest.typecode = Struct(pname=("urn:Magento","catalogProductAttributeMediaTypes"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="setId", aname="_setId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductAttributeMediaTypesRequest, encoded="urn:Magento")

class catalogProductAttributeMediaTypesResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
catalogProductAttributeMediaTypesResponse.typecode = Struct(pname=("urn:Magento","catalogProductAttributeMediaTypesResponse"), ofwhat=[ns0.catalogProductAttributeMediaTypeEntityArray_Def(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductAttributeMediaTypesResponse, encoded="urn:Magento")

class catalogProductAttributeMediaCreateRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        product -- part product
        data -- part data
        storeView -- part storeView
        productIdentifierType -- part productIdentifierType
        """
        self._sessionId =  kw.get("sessionId")
        self._product =  kw.get("product")
        self._data =  kw.get("data")
        self._storeView =  kw.get("storeView")
        self._productIdentifierType =  kw.get("productIdentifierType")
catalogProductAttributeMediaCreateRequest.typecode = Struct(pname=("urn:Magento","catalogProductAttributeMediaCreate"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="product", aname="_product", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.catalogProductAttributeMediaCreateEntity_Def(pname="data", aname="_data", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="storeView", aname="_storeView", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="productIdentifierType", aname="_productIdentifierType", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductAttributeMediaCreateRequest, encoded="urn:Magento")

class catalogProductAttributeMediaCreateResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
catalogProductAttributeMediaCreateResponse.typecode = Struct(pname=("urn:Magento","catalogProductAttributeMediaCreateResponse"), ofwhat=[ZSI.TC.String(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductAttributeMediaCreateResponse, encoded="urn:Magento")

class catalogProductAttributeMediaUpdateRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        product -- part product
        file -- part file
        data -- part data
        storeView -- part storeView
        productIdentifierType -- part productIdentifierType
        """
        self._sessionId =  kw.get("sessionId")
        self._product =  kw.get("product")
        self._file =  kw.get("file")
        self._data =  kw.get("data")
        self._storeView =  kw.get("storeView")
        self._productIdentifierType =  kw.get("productIdentifierType")
catalogProductAttributeMediaUpdateRequest.typecode = Struct(pname=("urn:Magento","catalogProductAttributeMediaUpdate"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="product", aname="_product", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="file", aname="_file", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.catalogProductAttributeMediaCreateEntity_Def(pname="data", aname="_data", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="storeView", aname="_storeView", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="productIdentifierType", aname="_productIdentifierType", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductAttributeMediaUpdateRequest, encoded="urn:Magento")

class catalogProductAttributeMediaUpdateResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
catalogProductAttributeMediaUpdateResponse.typecode = Struct(pname=("urn:Magento","catalogProductAttributeMediaUpdateResponse"), ofwhat=[ZSI.TC.Boolean(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductAttributeMediaUpdateResponse, encoded="urn:Magento")

class catalogProductAttributeMediaRemoveRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        product -- part product
        file -- part file
        productIdentifierType -- part productIdentifierType
        """
        self._sessionId =  kw.get("sessionId")
        self._product =  kw.get("product")
        self._file =  kw.get("file")
        self._productIdentifierType =  kw.get("productIdentifierType")
catalogProductAttributeMediaRemoveRequest.typecode = Struct(pname=("urn:Magento","catalogProductAttributeMediaRemove"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="product", aname="_product", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="file", aname="_file", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="productIdentifierType", aname="_productIdentifierType", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductAttributeMediaRemoveRequest, encoded="urn:Magento")

class catalogProductAttributeMediaRemoveResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
catalogProductAttributeMediaRemoveResponse.typecode = Struct(pname=("urn:Magento","catalogProductAttributeMediaRemoveResponse"), ofwhat=[ZSI.TC.Boolean(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductAttributeMediaRemoveResponse, encoded="urn:Magento")

class catalogProductLinkListRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        type -- part type
        product -- part product
        productIdentifierType -- part productIdentifierType
        """
        self._sessionId =  kw.get("sessionId")
        self._type =  kw.get("type")
        self._product =  kw.get("product")
        self._productIdentifierType =  kw.get("productIdentifierType")
catalogProductLinkListRequest.typecode = Struct(pname=("urn:Magento","catalogProductLinkList"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="type", aname="_type", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="product", aname="_product", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="productIdentifierType", aname="_productIdentifierType", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductLinkListRequest, encoded="urn:Magento")

class catalogProductLinkListResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
catalogProductLinkListResponse.typecode = Struct(pname=("urn:Magento","catalogProductLinkListResponse"), ofwhat=[ns0.catalogProductLinkEntityArray_Def(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductLinkListResponse, encoded="urn:Magento")

class catalogProductLinkAssignRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        type -- part type
        product -- part product
        linkedProduct -- part linkedProduct
        data -- part data
        productIdentifierType -- part productIdentifierType
        """
        self._sessionId =  kw.get("sessionId")
        self._type =  kw.get("type")
        self._product =  kw.get("product")
        self._linkedProduct =  kw.get("linkedProduct")
        self._data =  kw.get("data")
        self._productIdentifierType =  kw.get("productIdentifierType")
catalogProductLinkAssignRequest.typecode = Struct(pname=("urn:Magento","catalogProductLinkAssign"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="type", aname="_type", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="product", aname="_product", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="linkedProduct", aname="_linkedProduct", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.catalogProductLinkEntity_Def(pname="data", aname="_data", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="productIdentifierType", aname="_productIdentifierType", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductLinkAssignRequest, encoded="urn:Magento")

class catalogProductLinkAssignResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
catalogProductLinkAssignResponse.typecode = Struct(pname=("urn:Magento","catalogProductLinkAssignResponse"), ofwhat=[ZSI.TC.Boolean(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductLinkAssignResponse, encoded="urn:Magento")

class catalogProductLinkUpdateRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        type -- part type
        product -- part product
        linkedProduct -- part linkedProduct
        data -- part data
        productIdentifierType -- part productIdentifierType
        """
        self._sessionId =  kw.get("sessionId")
        self._type =  kw.get("type")
        self._product =  kw.get("product")
        self._linkedProduct =  kw.get("linkedProduct")
        self._data =  kw.get("data")
        self._productIdentifierType =  kw.get("productIdentifierType")
catalogProductLinkUpdateRequest.typecode = Struct(pname=("urn:Magento","catalogProductLinkUpdate"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="type", aname="_type", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="product", aname="_product", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="linkedProduct", aname="_linkedProduct", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.catalogProductLinkEntity_Def(pname="data", aname="_data", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="productIdentifierType", aname="_productIdentifierType", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductLinkUpdateRequest, encoded="urn:Magento")

class catalogProductLinkUpdateResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
catalogProductLinkUpdateResponse.typecode = Struct(pname=("urn:Magento","catalogProductLinkUpdateResponse"), ofwhat=[ZSI.TC.Boolean(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductLinkUpdateResponse, encoded="urn:Magento")

class catalogProductLinkRemoveRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        type -- part type
        product -- part product
        linkedProduct -- part linkedProduct
        productIdentifierType -- part productIdentifierType
        """
        self._sessionId =  kw.get("sessionId")
        self._type =  kw.get("type")
        self._product =  kw.get("product")
        self._linkedProduct =  kw.get("linkedProduct")
        self._productIdentifierType =  kw.get("productIdentifierType")
catalogProductLinkRemoveRequest.typecode = Struct(pname=("urn:Magento","catalogProductLinkRemove"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="type", aname="_type", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="product", aname="_product", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="linkedProduct", aname="_linkedProduct", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="productIdentifierType", aname="_productIdentifierType", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductLinkRemoveRequest, encoded="urn:Magento")

class catalogProductLinkRemoveResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
catalogProductLinkRemoveResponse.typecode = Struct(pname=("urn:Magento","catalogProductLinkRemoveResponse"), ofwhat=[ZSI.TC.Boolean(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductLinkRemoveResponse, encoded="urn:Magento")

class catalogProductLinkTypesRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        """
        self._sessionId =  kw.get("sessionId")
catalogProductLinkTypesRequest.typecode = Struct(pname=("urn:Magento","catalogProductLinkTypes"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductLinkTypesRequest, encoded="urn:Magento")

class catalogProductLinkTypesResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
catalogProductLinkTypesResponse.typecode = Struct(pname=("urn:Magento","catalogProductLinkTypesResponse"), ofwhat=[ns0.ArrayOfString_Def(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductLinkTypesResponse, encoded="urn:Magento")

class catalogProductLinkAttributesRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        type -- part type
        """
        self._sessionId =  kw.get("sessionId")
        self._type =  kw.get("type")
catalogProductLinkAttributesRequest.typecode = Struct(pname=("urn:Magento","catalogProductLinkAttributes"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="type", aname="_type", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductLinkAttributesRequest, encoded="urn:Magento")

class catalogProductLinkAttributesResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
catalogProductLinkAttributesResponse.typecode = Struct(pname=("urn:Magento","catalogProductLinkAttributesResponse"), ofwhat=[ns0.catalogProductLinkAttributeEntityArray_Def(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductLinkAttributesResponse, encoded="urn:Magento")

class catalogProductCustomOptionAddRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        productId -- part productId
        data -- part data
        store -- part store
        """
        self._sessionId =  kw.get("sessionId")
        self._productId =  kw.get("productId")
        self._data =  kw.get("data")
        self._store =  kw.get("store")
catalogProductCustomOptionAddRequest.typecode = Struct(pname=("urn:Magento","catalogProductCustomOptionAdd"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="productId", aname="_productId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.catalogProductCustomOptionToAdd_Def(pname="data", aname="_data", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="store", aname="_store", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductCustomOptionAddRequest, encoded="urn:Magento")

class catalogProductCustomOptionAddResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
catalogProductCustomOptionAddResponse.typecode = Struct(pname=("urn:Magento","catalogProductCustomOptionAddResponse"), ofwhat=[ZSI.TC.Boolean(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductCustomOptionAddResponse, encoded="urn:Magento")

class catalogProductCustomOptionUpdateRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        optionId -- part optionId
        data -- part data
        store -- part store
        """
        self._sessionId =  kw.get("sessionId")
        self._optionId =  kw.get("optionId")
        self._data =  kw.get("data")
        self._store =  kw.get("store")
catalogProductCustomOptionUpdateRequest.typecode = Struct(pname=("urn:Magento","catalogProductCustomOptionUpdate"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="optionId", aname="_optionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.catalogProductCustomOptionToUpdate_Def(pname="data", aname="_data", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="store", aname="_store", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductCustomOptionUpdateRequest, encoded="urn:Magento")

class catalogProductCustomOptionUpdateResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
catalogProductCustomOptionUpdateResponse.typecode = Struct(pname=("urn:Magento","catalogProductCustomOptionUpdateResponse"), ofwhat=[ZSI.TC.Boolean(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductCustomOptionUpdateResponse, encoded="urn:Magento")

class catalogProductCustomOptionInfoRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        optionId -- part optionId
        store -- part store
        """
        self._sessionId =  kw.get("sessionId")
        self._optionId =  kw.get("optionId")
        self._store =  kw.get("store")
catalogProductCustomOptionInfoRequest.typecode = Struct(pname=("urn:Magento","catalogProductCustomOptionInfo"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="optionId", aname="_optionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="store", aname="_store", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductCustomOptionInfoRequest, encoded="urn:Magento")

class catalogProductCustomOptionInfoResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
catalogProductCustomOptionInfoResponse.typecode = Struct(pname=("urn:Magento","catalogProductCustomOptionInfoResponse"), ofwhat=[ns0.catalogProductCustomOptionInfoEntity_Def(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductCustomOptionInfoResponse, encoded="urn:Magento")

class catalogProductCustomOptionTypesRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        """
        self._sessionId =  kw.get("sessionId")
catalogProductCustomOptionTypesRequest.typecode = Struct(pname=("urn:Magento","catalogProductCustomOptionTypes"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductCustomOptionTypesRequest, encoded="urn:Magento")

class catalogProductCustomOptionTypesResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
catalogProductCustomOptionTypesResponse.typecode = Struct(pname=("urn:Magento","catalogProductCustomOptionTypesResponse"), ofwhat=[ns0.catalogProductCustomOptionTypesArray_Def(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductCustomOptionTypesResponse, encoded="urn:Magento")

class catalogProductCustomOptionValueInfoRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        valueId -- part valueId
        store -- part store
        """
        self._sessionId =  kw.get("sessionId")
        self._valueId =  kw.get("valueId")
        self._store =  kw.get("store")
catalogProductCustomOptionValueInfoRequest.typecode = Struct(pname=("urn:Magento","catalogProductCustomOptionValueInfo"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="valueId", aname="_valueId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="store", aname="_store", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductCustomOptionValueInfoRequest, encoded="urn:Magento")

class catalogProductCustomOptionValueInfoResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
catalogProductCustomOptionValueInfoResponse.typecode = Struct(pname=("urn:Magento","catalogProductCustomOptionValueInfoResponse"), ofwhat=[ns0.catalogProductCustomOptionValueInfoEntity_Def(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductCustomOptionValueInfoResponse, encoded="urn:Magento")

class catalogProductCustomOptionValueListRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        optionId -- part optionId
        store -- part store
        """
        self._sessionId =  kw.get("sessionId")
        self._optionId =  kw.get("optionId")
        self._store =  kw.get("store")
catalogProductCustomOptionValueListRequest.typecode = Struct(pname=("urn:Magento","catalogProductCustomOptionValueList"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="optionId", aname="_optionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="store", aname="_store", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductCustomOptionValueListRequest, encoded="urn:Magento")

class catalogProductCustomOptionValueListResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
catalogProductCustomOptionValueListResponse.typecode = Struct(pname=("urn:Magento","catalogProductCustomOptionValueListResponse"), ofwhat=[ns0.catalogProductCustomOptionValueListArray_Def(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductCustomOptionValueListResponse, encoded="urn:Magento")

class catalogProductCustomOptionValueAddRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        optionId -- part optionId
        data -- part data
        store -- part store
        """
        self._sessionId =  kw.get("sessionId")
        self._optionId =  kw.get("optionId")
        self._data =  kw.get("data")
        self._store =  kw.get("store")
catalogProductCustomOptionValueAddRequest.typecode = Struct(pname=("urn:Magento","catalogProductCustomOptionValueAdd"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="optionId", aname="_optionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.catalogProductCustomOptionValueAddArray_Def(pname="data", aname="_data", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="store", aname="_store", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductCustomOptionValueAddRequest, encoded="urn:Magento")

class catalogProductCustomOptionValueAddResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
catalogProductCustomOptionValueAddResponse.typecode = Struct(pname=("urn:Magento","catalogProductCustomOptionValueAddResponse"), ofwhat=[ZSI.TC.Boolean(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductCustomOptionValueAddResponse, encoded="urn:Magento")

class catalogProductCustomOptionValueUpdateRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        valueId -- part valueId
        data -- part data
        storeId -- part storeId
        """
        self._sessionId =  kw.get("sessionId")
        self._valueId =  kw.get("valueId")
        self._data =  kw.get("data")
        self._storeId =  kw.get("storeId")
catalogProductCustomOptionValueUpdateRequest.typecode = Struct(pname=("urn:Magento","catalogProductCustomOptionValueUpdate"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="valueId", aname="_valueId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.catalogProductCustomOptionValueUpdateEntity_Def(pname="data", aname="_data", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="storeId", aname="_storeId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductCustomOptionValueUpdateRequest, encoded="urn:Magento")

class catalogProductCustomOptionValueUpdateResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
catalogProductCustomOptionValueUpdateResponse.typecode = Struct(pname=("urn:Magento","catalogProductCustomOptionValueUpdateResponse"), ofwhat=[ZSI.TC.Boolean(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductCustomOptionValueUpdateResponse, encoded="urn:Magento")

class catalogProductCustomOptionValueRemoveRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        valueId -- part valueId
        """
        self._sessionId =  kw.get("sessionId")
        self._valueId =  kw.get("valueId")
catalogProductCustomOptionValueRemoveRequest.typecode = Struct(pname=("urn:Magento","catalogProductCustomOptionValueRemove"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="valueId", aname="_valueId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductCustomOptionValueRemoveRequest, encoded="urn:Magento")

class catalogProductCustomOptionValueRemoveResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
catalogProductCustomOptionValueRemoveResponse.typecode = Struct(pname=("urn:Magento","catalogProductCustomOptionValueRemoveResponse"), ofwhat=[ZSI.TC.Boolean(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductCustomOptionValueRemoveResponse, encoded="urn:Magento")

class catalogProductCustomOptionListRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        productId -- part productId
        store -- part store
        """
        self._sessionId =  kw.get("sessionId")
        self._productId =  kw.get("productId")
        self._store =  kw.get("store")
catalogProductCustomOptionListRequest.typecode = Struct(pname=("urn:Magento","catalogProductCustomOptionList"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="productId", aname="_productId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="store", aname="_store", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductCustomOptionListRequest, encoded="urn:Magento")

class catalogProductCustomOptionListResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
catalogProductCustomOptionListResponse.typecode = Struct(pname=("urn:Magento","catalogProductCustomOptionListResponse"), ofwhat=[ns0.catalogProductCustomOptionListArray_Def(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductCustomOptionListResponse, encoded="urn:Magento")

class catalogProductCustomOptionRemoveRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        optionId -- part optionId
        """
        self._sessionId =  kw.get("sessionId")
        self._optionId =  kw.get("optionId")
catalogProductCustomOptionRemoveRequest.typecode = Struct(pname=("urn:Magento","catalogProductCustomOptionRemove"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="optionId", aname="_optionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductCustomOptionRemoveRequest, encoded="urn:Magento")

class catalogProductCustomOptionRemoveResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
catalogProductCustomOptionRemoveResponse.typecode = Struct(pname=("urn:Magento","catalogProductCustomOptionRemoveResponse"), ofwhat=[ZSI.TC.Boolean(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductCustomOptionRemoveResponse, encoded="urn:Magento")

class salesOrderListRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        filters -- part filters
        """
        self._sessionId =  kw.get("sessionId")
        self._filters =  kw.get("filters")
salesOrderListRequest.typecode = Struct(pname=("urn:Magento","salesOrderList"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.filters_Def(pname="filters", aname="_filters", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=salesOrderListRequest, encoded="urn:Magento")

class salesOrderListResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
salesOrderListResponse.typecode = Struct(pname=("urn:Magento","salesOrderListResponse"), ofwhat=[ns0.salesOrderListEntityArray_Def(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=salesOrderListResponse, encoded="urn:Magento")

class salesOrderInfoRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        orderIncrementId -- part orderIncrementId
        """
        self._sessionId =  kw.get("sessionId")
        self._orderIncrementId =  kw.get("orderIncrementId")
salesOrderInfoRequest.typecode = Struct(pname=("urn:Magento","salesOrderInfo"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="orderIncrementId", aname="_orderIncrementId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=salesOrderInfoRequest, encoded="urn:Magento")

class salesOrderInfoResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
salesOrderInfoResponse.typecode = Struct(pname=("urn:Magento","salesOrderInfoResponse"), ofwhat=[ns0.salesOrderEntity_Def(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=salesOrderInfoResponse, encoded="urn:Magento")

class salesOrderAddCommentRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        orderIncrementId -- part orderIncrementId
        status -- part status
        comment -- part comment
        notify -- part notify
        """
        self._sessionId =  kw.get("sessionId")
        self._orderIncrementId =  kw.get("orderIncrementId")
        self._status =  kw.get("status")
        self._comment =  kw.get("comment")
        self._notify =  kw.get("notify")
salesOrderAddCommentRequest.typecode = Struct(pname=("urn:Magento","salesOrderAddComment"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="orderIncrementId", aname="_orderIncrementId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="status", aname="_status", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="comment", aname="_comment", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="notify", aname="_notify", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=salesOrderAddCommentRequest, encoded="urn:Magento")

class salesOrderAddCommentResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
salesOrderAddCommentResponse.typecode = Struct(pname=("urn:Magento","salesOrderAddCommentResponse"), ofwhat=[ZSI.TC.Boolean(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=salesOrderAddCommentResponse, encoded="urn:Magento")

class salesOrderHoldRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        orderIncrementId -- part orderIncrementId
        """
        self._sessionId =  kw.get("sessionId")
        self._orderIncrementId =  kw.get("orderIncrementId")
salesOrderHoldRequest.typecode = Struct(pname=("urn:Magento","salesOrderHold"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="orderIncrementId", aname="_orderIncrementId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=salesOrderHoldRequest, encoded="urn:Magento")

class salesOrderHoldResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
salesOrderHoldResponse.typecode = Struct(pname=("urn:Magento","salesOrderHoldResponse"), ofwhat=[ZSI.TC.Boolean(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=salesOrderHoldResponse, encoded="urn:Magento")

class salesOrderUnholdRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        orderIncrementId -- part orderIncrementId
        """
        self._sessionId =  kw.get("sessionId")
        self._orderIncrementId =  kw.get("orderIncrementId")
salesOrderUnholdRequest.typecode = Struct(pname=("urn:Magento","salesOrderUnhold"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="orderIncrementId", aname="_orderIncrementId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=salesOrderUnholdRequest, encoded="urn:Magento")

class salesOrderUnholdResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
salesOrderUnholdResponse.typecode = Struct(pname=("urn:Magento","salesOrderUnholdResponse"), ofwhat=[ZSI.TC.Boolean(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=salesOrderUnholdResponse, encoded="urn:Magento")

class salesOrderCancelRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        orderIncrementId -- part orderIncrementId
        """
        self._sessionId =  kw.get("sessionId")
        self._orderIncrementId =  kw.get("orderIncrementId")
salesOrderCancelRequest.typecode = Struct(pname=("urn:Magento","salesOrderCancel"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="orderIncrementId", aname="_orderIncrementId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=salesOrderCancelRequest, encoded="urn:Magento")

class salesOrderCancelResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
salesOrderCancelResponse.typecode = Struct(pname=("urn:Magento","salesOrderCancelResponse"), ofwhat=[ZSI.TC.Boolean(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=salesOrderCancelResponse, encoded="urn:Magento")

class salesOrderShipmentListRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        filters -- part filters
        """
        self._sessionId =  kw.get("sessionId")
        self._filters =  kw.get("filters")
salesOrderShipmentListRequest.typecode = Struct(pname=("urn:Magento","salesOrderShipmentList"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.filters_Def(pname="filters", aname="_filters", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=salesOrderShipmentListRequest, encoded="urn:Magento")

class salesOrderShipmentListResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
salesOrderShipmentListResponse.typecode = Struct(pname=("urn:Magento","salesOrderShipmentListResponse"), ofwhat=[ns0.salesOrderShipmentEntityArray_Def(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=salesOrderShipmentListResponse, encoded="urn:Magento")

class salesOrderShipmentInfoRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        shipmentIncrementId -- part shipmentIncrementId
        """
        self._sessionId =  kw.get("sessionId")
        self._shipmentIncrementId =  kw.get("shipmentIncrementId")
salesOrderShipmentInfoRequest.typecode = Struct(pname=("urn:Magento","salesOrderShipmentInfo"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="shipmentIncrementId", aname="_shipmentIncrementId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=salesOrderShipmentInfoRequest, encoded="urn:Magento")

class salesOrderShipmentInfoResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
salesOrderShipmentInfoResponse.typecode = Struct(pname=("urn:Magento","salesOrderShipmentInfoResponse"), ofwhat=[ns0.salesOrderShipmentEntity_Def(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=salesOrderShipmentInfoResponse, encoded="urn:Magento")

class salesOrderShipmentCreateRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        orderIncrementId -- part orderIncrementId
        itemsQty -- part itemsQty
        comment -- part comment
        email -- part email
        includeComment -- part includeComment
        """
        self._sessionId =  kw.get("sessionId")
        self._orderIncrementId =  kw.get("orderIncrementId")
        self._itemsQty =  kw.get("itemsQty")
        self._comment =  kw.get("comment")
        self._email =  kw.get("email")
        self._includeComment =  kw.get("includeComment")
salesOrderShipmentCreateRequest.typecode = Struct(pname=("urn:Magento","salesOrderShipmentCreate"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="orderIncrementId", aname="_orderIncrementId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.orderItemIdQtyArray_Def(pname="itemsQty", aname="_itemsQty", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="comment", aname="_comment", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="email", aname="_email", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="includeComment", aname="_includeComment", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=salesOrderShipmentCreateRequest, encoded="urn:Magento")

class salesOrderShipmentCreateResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        shipmentIncrementId -- part shipmentIncrementId
        """
        self._shipmentIncrementId =  kw.get("shipmentIncrementId")
salesOrderShipmentCreateResponse.typecode = Struct(pname=("urn:Magento","salesOrderShipmentCreateResponse"), ofwhat=[ZSI.TC.String(pname="shipmentIncrementId", aname="_shipmentIncrementId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=salesOrderShipmentCreateResponse, encoded="urn:Magento")

class salesOrderShipmentAddCommentRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        shipmentIncrementId -- part shipmentIncrementId
        comment -- part comment
        email -- part email
        includeInEmail -- part includeInEmail
        """
        self._sessionId =  kw.get("sessionId")
        self._shipmentIncrementId =  kw.get("shipmentIncrementId")
        self._comment =  kw.get("comment")
        self._email =  kw.get("email")
        self._includeInEmail =  kw.get("includeInEmail")
salesOrderShipmentAddCommentRequest.typecode = Struct(pname=("urn:Magento","salesOrderShipmentAddComment"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="shipmentIncrementId", aname="_shipmentIncrementId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="comment", aname="_comment", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="email", aname="_email", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="includeInEmail", aname="_includeInEmail", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=salesOrderShipmentAddCommentRequest, encoded="urn:Magento")

class salesOrderShipmentAddCommentResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        shipmentIncrementId -- part shipmentIncrementId
        """
        self._shipmentIncrementId =  kw.get("shipmentIncrementId")
salesOrderShipmentAddCommentResponse.typecode = Struct(pname=("urn:Magento","salesOrderShipmentAddCommentResponse"), ofwhat=[ZSI.TC.Boolean(pname="shipmentIncrementId", aname="_shipmentIncrementId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=salesOrderShipmentAddCommentResponse, encoded="urn:Magento")

class salesOrderShipmentAddTrackRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        shipmentIncrementId -- part shipmentIncrementId
        carrier -- part carrier
        title -- part title
        trackNumber -- part trackNumber
        """
        self._sessionId =  kw.get("sessionId")
        self._shipmentIncrementId =  kw.get("shipmentIncrementId")
        self._carrier =  kw.get("carrier")
        self._title =  kw.get("title")
        self._trackNumber =  kw.get("trackNumber")
salesOrderShipmentAddTrackRequest.typecode = Struct(pname=("urn:Magento","salesOrderShipmentAddTrack"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="shipmentIncrementId", aname="_shipmentIncrementId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="carrier", aname="_carrier", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="title", aname="_title", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="trackNumber", aname="_trackNumber", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=salesOrderShipmentAddTrackRequest, encoded="urn:Magento")

class salesOrderShipmentAddTrackResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
salesOrderShipmentAddTrackResponse.typecode = Struct(pname=("urn:Magento","salesOrderShipmentAddTrackResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=salesOrderShipmentAddTrackResponse, encoded="urn:Magento")

class salesOrderShipmentSendInfoRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        shipmentIncrementId -- part shipmentIncrementId
        comment -- part comment
        """
        self._sessionId =  kw.get("sessionId")
        self._shipmentIncrementId =  kw.get("shipmentIncrementId")
        self._comment =  kw.get("comment")
salesOrderShipmentSendInfoRequest.typecode = Struct(pname=("urn:Magento","salesOrderShipmentSendInfo"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="shipmentIncrementId", aname="_shipmentIncrementId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="comment", aname="_comment", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=salesOrderShipmentSendInfoRequest, encoded="urn:Magento")

class salesOrderShipmentSendInfoResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
salesOrderShipmentSendInfoResponse.typecode = Struct(pname=("urn:Magento","salesOrderShipmentSendInfoResponse"), ofwhat=[ZSI.TC.Boolean(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=salesOrderShipmentSendInfoResponse, encoded="urn:Magento")

class salesOrderShipmentRemoveTrackRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        shipmentIncrementId -- part shipmentIncrementId
        trackId -- part trackId
        """
        self._sessionId =  kw.get("sessionId")
        self._shipmentIncrementId =  kw.get("shipmentIncrementId")
        self._trackId =  kw.get("trackId")
salesOrderShipmentRemoveTrackRequest.typecode = Struct(pname=("urn:Magento","salesOrderShipmentRemoveTrack"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="shipmentIncrementId", aname="_shipmentIncrementId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="trackId", aname="_trackId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=salesOrderShipmentRemoveTrackRequest, encoded="urn:Magento")

class salesOrderShipmentRemoveTrackResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
salesOrderShipmentRemoveTrackResponse.typecode = Struct(pname=("urn:Magento","salesOrderShipmentRemoveTrackResponse"), ofwhat=[ZSI.TC.Boolean(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=salesOrderShipmentRemoveTrackResponse, encoded="urn:Magento")

class salesOrderShipmentGetCarriersRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        orderIncrementId -- part orderIncrementId
        """
        self._sessionId =  kw.get("sessionId")
        self._orderIncrementId =  kw.get("orderIncrementId")
salesOrderShipmentGetCarriersRequest.typecode = Struct(pname=("urn:Magento","salesOrderShipmentGetCarriers"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="orderIncrementId", aname="_orderIncrementId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=salesOrderShipmentGetCarriersRequest, encoded="urn:Magento")

class salesOrderShipmentGetCarriersResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
salesOrderShipmentGetCarriersResponse.typecode = Struct(pname=("urn:Magento","salesOrderShipmentGetCarriersResponse"), ofwhat=[ns0.associativeArray_Def(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=salesOrderShipmentGetCarriersResponse, encoded="urn:Magento")

class salesOrderInvoiceListRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        filters -- part filters
        """
        self._sessionId =  kw.get("sessionId")
        self._filters =  kw.get("filters")
salesOrderInvoiceListRequest.typecode = Struct(pname=("urn:Magento","salesOrderInvoiceList"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.filters_Def(pname="filters", aname="_filters", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=salesOrderInvoiceListRequest, encoded="urn:Magento")

class salesOrderInvoiceListResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
salesOrderInvoiceListResponse.typecode = Struct(pname=("urn:Magento","salesOrderInvoiceListResponse"), ofwhat=[ns0.salesOrderInvoiceEntityArray_Def(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=salesOrderInvoiceListResponse, encoded="urn:Magento")

class salesOrderInvoiceInfoRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        invoiceIncrementId -- part invoiceIncrementId
        """
        self._sessionId =  kw.get("sessionId")
        self._invoiceIncrementId =  kw.get("invoiceIncrementId")
salesOrderInvoiceInfoRequest.typecode = Struct(pname=("urn:Magento","salesOrderInvoiceInfo"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="invoiceIncrementId", aname="_invoiceIncrementId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=salesOrderInvoiceInfoRequest, encoded="urn:Magento")

class salesOrderInvoiceInfoResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
salesOrderInvoiceInfoResponse.typecode = Struct(pname=("urn:Magento","salesOrderInvoiceInfoResponse"), ofwhat=[ns0.salesOrderInvoiceEntity_Def(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=salesOrderInvoiceInfoResponse, encoded="urn:Magento")

class salesOrderInvoiceCreateRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        invoiceIncrementId -- part invoiceIncrementId
        itemsQty -- part itemsQty
        comment -- part comment
        email -- part email
        includeComment -- part includeComment
        """
        self._sessionId =  kw.get("sessionId")
        self._invoiceIncrementId =  kw.get("invoiceIncrementId")
        self._itemsQty =  kw.get("itemsQty")
        self._comment =  kw.get("comment")
        self._email =  kw.get("email")
        self._includeComment =  kw.get("includeComment")
salesOrderInvoiceCreateRequest.typecode = Struct(pname=("urn:Magento","salesOrderInvoiceCreate"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="invoiceIncrementId", aname="_invoiceIncrementId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.orderItemIdQtyArray_Def(pname="itemsQty", aname="_itemsQty", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="comment", aname="_comment", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="email", aname="_email", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="includeComment", aname="_includeComment", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=salesOrderInvoiceCreateRequest, encoded="urn:Magento")

class salesOrderInvoiceCreateResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
salesOrderInvoiceCreateResponse.typecode = Struct(pname=("urn:Magento","salesOrderInvoiceCreateResponse"), ofwhat=[ZSI.TC.String(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=salesOrderInvoiceCreateResponse, encoded="urn:Magento")

class salesOrderInvoiceAddCommentRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        invoiceIncrementId -- part invoiceIncrementId
        comment -- part comment
        email -- part email
        includeComment -- part includeComment
        """
        self._sessionId =  kw.get("sessionId")
        self._invoiceIncrementId =  kw.get("invoiceIncrementId")
        self._comment =  kw.get("comment")
        self._email =  kw.get("email")
        self._includeComment =  kw.get("includeComment")
salesOrderInvoiceAddCommentRequest.typecode = Struct(pname=("urn:Magento","salesOrderInvoiceAddComment"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="invoiceIncrementId", aname="_invoiceIncrementId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="comment", aname="_comment", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="email", aname="_email", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="includeComment", aname="_includeComment", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=salesOrderInvoiceAddCommentRequest, encoded="urn:Magento")

class salesOrderInvoiceAddCommentResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
salesOrderInvoiceAddCommentResponse.typecode = Struct(pname=("urn:Magento","salesOrderInvoiceAddCommentResponse"), ofwhat=[ZSI.TC.Boolean(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=salesOrderInvoiceAddCommentResponse, encoded="urn:Magento")

class salesOrderInvoiceCaptureRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        invoiceIncrementId -- part invoiceIncrementId
        """
        self._sessionId =  kw.get("sessionId")
        self._invoiceIncrementId =  kw.get("invoiceIncrementId")
salesOrderInvoiceCaptureRequest.typecode = Struct(pname=("urn:Magento","salesOrderInvoiceCapture"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="invoiceIncrementId", aname="_invoiceIncrementId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=salesOrderInvoiceCaptureRequest, encoded="urn:Magento")

class salesOrderInvoiceCaptureResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
salesOrderInvoiceCaptureResponse.typecode = Struct(pname=("urn:Magento","salesOrderInvoiceCaptureResponse"), ofwhat=[ZSI.TC.Boolean(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=salesOrderInvoiceCaptureResponse, encoded="urn:Magento")

class salesOrderInvoiceVoidRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        invoiceIncrementId -- part invoiceIncrementId
        """
        self._sessionId =  kw.get("sessionId")
        self._invoiceIncrementId =  kw.get("invoiceIncrementId")
salesOrderInvoiceVoidRequest.typecode = Struct(pname=("urn:Magento","salesOrderInvoiceVoid"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="invoiceIncrementId", aname="_invoiceIncrementId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=salesOrderInvoiceVoidRequest, encoded="urn:Magento")

class salesOrderInvoiceVoidResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
salesOrderInvoiceVoidResponse.typecode = Struct(pname=("urn:Magento","salesOrderInvoiceVoidResponse"), ofwhat=[ZSI.TC.Boolean(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=salesOrderInvoiceVoidResponse, encoded="urn:Magento")

class salesOrderInvoiceCancelRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        invoiceIncrementId -- part invoiceIncrementId
        """
        self._sessionId =  kw.get("sessionId")
        self._invoiceIncrementId =  kw.get("invoiceIncrementId")
salesOrderInvoiceCancelRequest.typecode = Struct(pname=("urn:Magento","salesOrderInvoiceCancel"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="invoiceIncrementId", aname="_invoiceIncrementId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=salesOrderInvoiceCancelRequest, encoded="urn:Magento")

class salesOrderInvoiceCancelResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
salesOrderInvoiceCancelResponse.typecode = Struct(pname=("urn:Magento","salesOrderInvoiceCancelResponse"), ofwhat=[ZSI.TC.Boolean(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=salesOrderInvoiceCancelResponse, encoded="urn:Magento")

class salesOrderCreditmemoListRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        filters -- part filters
        """
        self._sessionId =  kw.get("sessionId")
        self._filters =  kw.get("filters")
salesOrderCreditmemoListRequest.typecode = Struct(pname=("urn:Magento","salesOrderCreditmemoList"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.filters_Def(pname="filters", aname="_filters", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=salesOrderCreditmemoListRequest, encoded="urn:Magento")

class salesOrderCreditmemoListResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
salesOrderCreditmemoListResponse.typecode = Struct(pname=("urn:Magento","salesOrderCreditmemoListResponse"), ofwhat=[ns0.salesOrderCreditmemoEntityArray_Def(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=salesOrderCreditmemoListResponse, encoded="urn:Magento")

class salesOrderCreditmemoInfoRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        creditmemoIncrementId -- part creditmemoIncrementId
        """
        self._sessionId =  kw.get("sessionId")
        self._creditmemoIncrementId =  kw.get("creditmemoIncrementId")
salesOrderCreditmemoInfoRequest.typecode = Struct(pname=("urn:Magento","salesOrderCreditmemoInfo"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="creditmemoIncrementId", aname="_creditmemoIncrementId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=salesOrderCreditmemoInfoRequest, encoded="urn:Magento")

class salesOrderCreditmemoInfoResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
salesOrderCreditmemoInfoResponse.typecode = Struct(pname=("urn:Magento","salesOrderCreditmemoInfoResponse"), ofwhat=[ns0.salesOrderCreditmemoEntity_Def(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=salesOrderCreditmemoInfoResponse, encoded="urn:Magento")

class salesOrderCreditmemoCreateRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        creditmemoIncrementId -- part creditmemoIncrementId
        creditmemoData -- part creditmemoData
        comment -- part comment
        notifyCustomer -- part notifyCustomer
        includeComment -- part includeComment
        refundToStoreCreditAmount -- part refundToStoreCreditAmount
        """
        self._sessionId =  kw.get("sessionId")
        self._creditmemoIncrementId =  kw.get("creditmemoIncrementId")
        self._creditmemoData =  kw.get("creditmemoData")
        self._comment =  kw.get("comment")
        self._notifyCustomer =  kw.get("notifyCustomer")
        self._includeComment =  kw.get("includeComment")
        self._refundToStoreCreditAmount =  kw.get("refundToStoreCreditAmount")
salesOrderCreditmemoCreateRequest.typecode = Struct(pname=("urn:Magento","salesOrderCreditmemoCreate"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="creditmemoIncrementId", aname="_creditmemoIncrementId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.salesOrderCreditmemoData_Def(pname="creditmemoData", aname="_creditmemoData", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="comment", aname="_comment", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="notifyCustomer", aname="_notifyCustomer", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="includeComment", aname="_includeComment", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="refundToStoreCreditAmount", aname="_refundToStoreCreditAmount", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=salesOrderCreditmemoCreateRequest, encoded="urn:Magento")

class salesOrderCreditmemoCreateResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
salesOrderCreditmemoCreateResponse.typecode = Struct(pname=("urn:Magento","salesOrderCreditmemoCreateResponse"), ofwhat=[ZSI.TC.String(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=salesOrderCreditmemoCreateResponse, encoded="urn:Magento")

class salesOrderCreditmemoAddCommentRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        creditmemoIncrementId -- part creditmemoIncrementId
        comment -- part comment
        notifyCustomer -- part notifyCustomer
        includeComment -- part includeComment
        """
        self._sessionId =  kw.get("sessionId")
        self._creditmemoIncrementId =  kw.get("creditmemoIncrementId")
        self._comment =  kw.get("comment")
        self._notifyCustomer =  kw.get("notifyCustomer")
        self._includeComment =  kw.get("includeComment")
salesOrderCreditmemoAddCommentRequest.typecode = Struct(pname=("urn:Magento","salesOrderCreditmemoAddComment"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="creditmemoIncrementId", aname="_creditmemoIncrementId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="comment", aname="_comment", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="notifyCustomer", aname="_notifyCustomer", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="includeComment", aname="_includeComment", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=salesOrderCreditmemoAddCommentRequest, encoded="urn:Magento")

class salesOrderCreditmemoAddCommentResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
salesOrderCreditmemoAddCommentResponse.typecode = Struct(pname=("urn:Magento","salesOrderCreditmemoAddCommentResponse"), ofwhat=[ZSI.TC.Boolean(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=salesOrderCreditmemoAddCommentResponse, encoded="urn:Magento")

class salesOrderCreditmemoCancelRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        creditmemoIncrementId -- part creditmemoIncrementId
        """
        self._sessionId =  kw.get("sessionId")
        self._creditmemoIncrementId =  kw.get("creditmemoIncrementId")
salesOrderCreditmemoCancelRequest.typecode = Struct(pname=("urn:Magento","salesOrderCreditmemoCancel"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="creditmemoIncrementId", aname="_creditmemoIncrementId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=salesOrderCreditmemoCancelRequest, encoded="urn:Magento")

class salesOrderCreditmemoCancelResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
salesOrderCreditmemoCancelResponse.typecode = Struct(pname=("urn:Magento","salesOrderCreditmemoCancelResponse"), ofwhat=[ZSI.TC.Boolean(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=salesOrderCreditmemoCancelResponse, encoded="urn:Magento")

class catalogInventoryStockItemListRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        products -- part products
        """
        self._sessionId =  kw.get("sessionId")
        self._products =  kw.get("products")
catalogInventoryStockItemListRequest.typecode = Struct(pname=("urn:Magento","catalogInventoryStockItemList"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.ArrayOfString_Def(pname="products", aname="_products", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogInventoryStockItemListRequest, encoded="urn:Magento")

class catalogInventoryStockItemListResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
catalogInventoryStockItemListResponse.typecode = Struct(pname=("urn:Magento","catalogInventoryStockItemListResponse"), ofwhat=[ns0.catalogInventoryStockItemEntityArray_Def(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogInventoryStockItemListResponse, encoded="urn:Magento")

class catalogInventoryStockItemUpdateRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        product -- part product
        data -- part data
        """
        self._sessionId =  kw.get("sessionId")
        self._product =  kw.get("product")
        self._data =  kw.get("data")
catalogInventoryStockItemUpdateRequest.typecode = Struct(pname=("urn:Magento","catalogInventoryStockItemUpdate"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="product", aname="_product", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.catalogInventoryStockItemUpdateEntity_Def(pname="data", aname="_data", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogInventoryStockItemUpdateRequest, encoded="urn:Magento")

class catalogInventoryStockItemUpdateResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
catalogInventoryStockItemUpdateResponse.typecode = Struct(pname=("urn:Magento","catalogInventoryStockItemUpdateResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogInventoryStockItemUpdateResponse, encoded="urn:Magento")

class shoppingCartCreateRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        storeId -- part storeId
        """
        self._sessionId =  kw.get("sessionId")
        self._storeId =  kw.get("storeId")
shoppingCartCreateRequest.typecode = Struct(pname=("urn:Magento","shoppingCartCreate"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="storeId", aname="_storeId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=shoppingCartCreateRequest, encoded="urn:Magento")

class shoppingCartCreateResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        quoteId -- part quoteId
        """
        self._quoteId =  kw.get("quoteId")
shoppingCartCreateResponse.typecode = Struct(pname=("urn:Magento","shoppingCartCreateResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="quoteId", aname="_quoteId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=shoppingCartCreateResponse, encoded="urn:Magento")

class shoppingCartInfoRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        quoteId -- part quoteId
        storeId -- part storeId
        """
        self._sessionId =  kw.get("sessionId")
        self._quoteId =  kw.get("quoteId")
        self._storeId =  kw.get("storeId")
shoppingCartInfoRequest.typecode = Struct(pname=("urn:Magento","shoppingCartInfo"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="quoteId", aname="_quoteId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="storeId", aname="_storeId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=shoppingCartInfoRequest, encoded="urn:Magento")

class shoppingCartInfoResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
shoppingCartInfoResponse.typecode = Struct(pname=("urn:Magento","shoppingCartInfoResponse"), ofwhat=[ns0.shoppingCartInfoEntity_Def(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=shoppingCartInfoResponse, encoded="urn:Magento")

class shoppingCartTotalsRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        quoteId -- part quoteId
        storeId -- part storeId
        """
        self._sessionId =  kw.get("sessionId")
        self._quoteId =  kw.get("quoteId")
        self._storeId =  kw.get("storeId")
shoppingCartTotalsRequest.typecode = Struct(pname=("urn:Magento","shoppingCartTotals"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="quoteId", aname="_quoteId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="storeId", aname="_storeId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=shoppingCartTotalsRequest, encoded="urn:Magento")

class shoppingCartTotalsResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
shoppingCartTotalsResponse.typecode = Struct(pname=("urn:Magento","shoppingCartTotalsResponse"), ofwhat=[ns0.shoppingCartTotalsEntityArray_Def(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=shoppingCartTotalsResponse, encoded="urn:Magento")

class shoppingCartOrderRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        quoteId -- part quoteId
        storeId -- part storeId
        licenses -- part licenses
        """
        self._sessionId =  kw.get("sessionId")
        self._quoteId =  kw.get("quoteId")
        self._storeId =  kw.get("storeId")
        self._licenses =  kw.get("licenses")
shoppingCartOrderRequest.typecode = Struct(pname=("urn:Magento","shoppingCartOrder"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="quoteId", aname="_quoteId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="storeId", aname="_storeId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.ArrayOfString_Def(pname="licenses", aname="_licenses", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=shoppingCartOrderRequest, encoded="urn:Magento")

class shoppingCartOrderResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
shoppingCartOrderResponse.typecode = Struct(pname=("urn:Magento","shoppingCartOrderResponse"), ofwhat=[ZSI.TC.String(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=shoppingCartOrderResponse, encoded="urn:Magento")

class shoppingCartLicenseRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        quoteId -- part quoteId
        storeId -- part storeId
        """
        self._sessionId =  kw.get("sessionId")
        self._quoteId =  kw.get("quoteId")
        self._storeId =  kw.get("storeId")
shoppingCartLicenseRequest.typecode = Struct(pname=("urn:Magento","shoppingCartLicense"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="quoteId", aname="_quoteId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="storeId", aname="_storeId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=shoppingCartLicenseRequest, encoded="urn:Magento")

class shoppingCartLicenseResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
shoppingCartLicenseResponse.typecode = Struct(pname=("urn:Magento","shoppingCartLicenseResponse"), ofwhat=[ns0.shoppingCartLicenseEntityArray_Def(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=shoppingCartLicenseResponse, encoded="urn:Magento")

class shoppingCartProductAddRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        quoteId -- part quoteId
        products -- part products
        storeId -- part storeId
        """
        self._sessionId =  kw.get("sessionId")
        self._quoteId =  kw.get("quoteId")
        self._products =  kw.get("products")
        self._storeId =  kw.get("storeId")
shoppingCartProductAddRequest.typecode = Struct(pname=("urn:Magento","shoppingCartProductAdd"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="quoteId", aname="_quoteId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.shoppingCartProductEntityArray_Def(pname="products", aname="_products", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="storeId", aname="_storeId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=shoppingCartProductAddRequest, encoded="urn:Magento")

class shoppingCartProductAddResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
shoppingCartProductAddResponse.typecode = Struct(pname=("urn:Magento","shoppingCartProductAddResponse"), ofwhat=[ZSI.TC.Boolean(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=shoppingCartProductAddResponse, encoded="urn:Magento")

class shoppingCartProductUpdateRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        quoteId -- part quoteId
        products -- part products
        storeId -- part storeId
        """
        self._sessionId =  kw.get("sessionId")
        self._quoteId =  kw.get("quoteId")
        self._products =  kw.get("products")
        self._storeId =  kw.get("storeId")
shoppingCartProductUpdateRequest.typecode = Struct(pname=("urn:Magento","shoppingCartProductUpdate"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="quoteId", aname="_quoteId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.shoppingCartProductEntityArray_Def(pname="products", aname="_products", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="storeId", aname="_storeId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=shoppingCartProductUpdateRequest, encoded="urn:Magento")

class shoppingCartProductUpdateResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
shoppingCartProductUpdateResponse.typecode = Struct(pname=("urn:Magento","shoppingCartProductUpdateResponse"), ofwhat=[ZSI.TC.Boolean(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=shoppingCartProductUpdateResponse, encoded="urn:Magento")

class shoppingCartProductRemoveRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        quoteId -- part quoteId
        products -- part products
        storeId -- part storeId
        """
        self._sessionId =  kw.get("sessionId")
        self._quoteId =  kw.get("quoteId")
        self._products =  kw.get("products")
        self._storeId =  kw.get("storeId")
shoppingCartProductRemoveRequest.typecode = Struct(pname=("urn:Magento","shoppingCartProductRemove"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="quoteId", aname="_quoteId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.shoppingCartProductEntityArray_Def(pname="products", aname="_products", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="storeId", aname="_storeId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=shoppingCartProductRemoveRequest, encoded="urn:Magento")

class shoppingCartProductRemoveResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
shoppingCartProductRemoveResponse.typecode = Struct(pname=("urn:Magento","shoppingCartProductRemoveResponse"), ofwhat=[ZSI.TC.Boolean(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=shoppingCartProductRemoveResponse, encoded="urn:Magento")

class shoppingCartProductListRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        quoteId -- part quoteId
        storeId -- part storeId
        """
        self._sessionId =  kw.get("sessionId")
        self._quoteId =  kw.get("quoteId")
        self._storeId =  kw.get("storeId")
shoppingCartProductListRequest.typecode = Struct(pname=("urn:Magento","shoppingCartProductList"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="quoteId", aname="_quoteId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="storeId", aname="_storeId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=shoppingCartProductListRequest, encoded="urn:Magento")

class shoppingCartProductListResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
shoppingCartProductListResponse.typecode = Struct(pname=("urn:Magento","shoppingCartProductListResponse"), ofwhat=[ns0.shoppingCartProductResponseEntityArray_Def(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=shoppingCartProductListResponse, encoded="urn:Magento")

class shoppingCartProductMoveToCustomerQuoteRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        quoteId -- part quoteId
        products -- part products
        storeId -- part storeId
        """
        self._sessionId =  kw.get("sessionId")
        self._quoteId =  kw.get("quoteId")
        self._products =  kw.get("products")
        self._storeId =  kw.get("storeId")
shoppingCartProductMoveToCustomerQuoteRequest.typecode = Struct(pname=("urn:Magento","shoppingCartProductMoveToCustomerQuote"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="quoteId", aname="_quoteId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.shoppingCartProductEntityArray_Def(pname="products", aname="_products", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="storeId", aname="_storeId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=shoppingCartProductMoveToCustomerQuoteRequest, encoded="urn:Magento")

class shoppingCartProductMoveToCustomerQuoteResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
shoppingCartProductMoveToCustomerQuoteResponse.typecode = Struct(pname=("urn:Magento","shoppingCartProductMoveToCustomerQuoteResponse"), ofwhat=[ZSI.TC.Boolean(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=shoppingCartProductMoveToCustomerQuoteResponse, encoded="urn:Magento")

class shoppingCartCustomerSetRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        quoteId -- part quoteId
        customer -- part customer
        storeId -- part storeId
        """
        self._sessionId =  kw.get("sessionId")
        self._quoteId =  kw.get("quoteId")
        self._customer =  kw.get("customer")
        self._storeId =  kw.get("storeId")
shoppingCartCustomerSetRequest.typecode = Struct(pname=("urn:Magento","shoppingCartCustomerSet"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="quoteId", aname="_quoteId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.shoppingCartCustomerEntity_Def(pname="customer", aname="_customer", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="storeId", aname="_storeId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=shoppingCartCustomerSetRequest, encoded="urn:Magento")

class shoppingCartCustomerSetResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
shoppingCartCustomerSetResponse.typecode = Struct(pname=("urn:Magento","shoppingCartCustomerSetResponse"), ofwhat=[ZSI.TC.Boolean(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=shoppingCartCustomerSetResponse, encoded="urn:Magento")

class shoppingCartCustomerAddressesRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        quoteId -- part quoteId
        customer -- part customer
        storeId -- part storeId
        """
        self._sessionId =  kw.get("sessionId")
        self._quoteId =  kw.get("quoteId")
        self._customer =  kw.get("customer")
        self._storeId =  kw.get("storeId")
shoppingCartCustomerAddressesRequest.typecode = Struct(pname=("urn:Magento","shoppingCartCustomerAddresses"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="quoteId", aname="_quoteId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.shoppingCartCustomerAddressEntityArray_Def(pname="customer", aname="_customer", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="storeId", aname="_storeId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=shoppingCartCustomerAddressesRequest, encoded="urn:Magento")

class shoppingCartCustomerAddressesResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
shoppingCartCustomerAddressesResponse.typecode = Struct(pname=("urn:Magento","shoppingCartCustomerAddressesResponse"), ofwhat=[ZSI.TC.Boolean(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=shoppingCartCustomerAddressesResponse, encoded="urn:Magento")

class shoppingCartShippingMethodRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        quoteId -- part quoteId
        method -- part method
        storeId -- part storeId
        """
        self._sessionId =  kw.get("sessionId")
        self._quoteId =  kw.get("quoteId")
        self._method =  kw.get("method")
        self._storeId =  kw.get("storeId")
shoppingCartShippingMethodRequest.typecode = Struct(pname=("urn:Magento","shoppingCartShippingMethod"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="quoteId", aname="_quoteId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="method", aname="_method", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="storeId", aname="_storeId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=shoppingCartShippingMethodRequest, encoded="urn:Magento")

class shoppingCartShippingMethodResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
shoppingCartShippingMethodResponse.typecode = Struct(pname=("urn:Magento","shoppingCartShippingMethodResponse"), ofwhat=[ZSI.TC.Boolean(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=shoppingCartShippingMethodResponse, encoded="urn:Magento")

class shoppingCartShippingListRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        quoteId -- part quoteId
        storeId -- part storeId
        """
        self._sessionId =  kw.get("sessionId")
        self._quoteId =  kw.get("quoteId")
        self._storeId =  kw.get("storeId")
shoppingCartShippingListRequest.typecode = Struct(pname=("urn:Magento","shoppingCartShippingList"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="quoteId", aname="_quoteId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="storeId", aname="_storeId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=shoppingCartShippingListRequest, encoded="urn:Magento")

class shoppingCartShippingListResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
shoppingCartShippingListResponse.typecode = Struct(pname=("urn:Magento","shoppingCartShippingListResponse"), ofwhat=[ns0.shoppingCartShippingMethodEntityArray_Def(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=shoppingCartShippingListResponse, encoded="urn:Magento")

class shoppingCartPaymentMethodRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        quoteId -- part quoteId
        method -- part method
        storeId -- part storeId
        """
        self._sessionId =  kw.get("sessionId")
        self._quoteId =  kw.get("quoteId")
        self._method =  kw.get("method")
        self._storeId =  kw.get("storeId")
shoppingCartPaymentMethodRequest.typecode = Struct(pname=("urn:Magento","shoppingCartPaymentMethod"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="quoteId", aname="_quoteId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.shoppingCartPaymentMethodEntity_Def(pname="method", aname="_method", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="storeId", aname="_storeId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=shoppingCartPaymentMethodRequest, encoded="urn:Magento")

class shoppingCartPaymentMethodResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
shoppingCartPaymentMethodResponse.typecode = Struct(pname=("urn:Magento","shoppingCartPaymentMethodResponse"), ofwhat=[ZSI.TC.Boolean(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=shoppingCartPaymentMethodResponse, encoded="urn:Magento")

class shoppingCartPaymentListRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        quoteId -- part quoteId
        storeId -- part storeId
        """
        self._sessionId =  kw.get("sessionId")
        self._quoteId =  kw.get("quoteId")
        self._storeId =  kw.get("storeId")
shoppingCartPaymentListRequest.typecode = Struct(pname=("urn:Magento","shoppingCartPaymentList"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="quoteId", aname="_quoteId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="storeId", aname="_storeId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=shoppingCartPaymentListRequest, encoded="urn:Magento")

class shoppingCartPaymentListResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
shoppingCartPaymentListResponse.typecode = Struct(pname=("urn:Magento","shoppingCartPaymentListResponse"), ofwhat=[ns0.shoppingCartPaymentMethodResponseEntityArray_Def(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=shoppingCartPaymentListResponse, encoded="urn:Magento")

class shoppingCartCouponAddRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        quoteId -- part quoteId
        couponCode -- part couponCode
        storeId -- part storeId
        """
        self._sessionId =  kw.get("sessionId")
        self._quoteId =  kw.get("quoteId")
        self._couponCode =  kw.get("couponCode")
        self._storeId =  kw.get("storeId")
shoppingCartCouponAddRequest.typecode = Struct(pname=("urn:Magento","shoppingCartCouponAdd"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="quoteId", aname="_quoteId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="couponCode", aname="_couponCode", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="storeId", aname="_storeId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=shoppingCartCouponAddRequest, encoded="urn:Magento")

class shoppingCartCouponAddResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
shoppingCartCouponAddResponse.typecode = Struct(pname=("urn:Magento","shoppingCartCouponAddResponse"), ofwhat=[ZSI.TC.Boolean(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=shoppingCartCouponAddResponse, encoded="urn:Magento")

class shoppingCartCouponRemoveRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        quoteId -- part quoteId
        storeId -- part storeId
        """
        self._sessionId =  kw.get("sessionId")
        self._quoteId =  kw.get("quoteId")
        self._storeId =  kw.get("storeId")
shoppingCartCouponRemoveRequest.typecode = Struct(pname=("urn:Magento","shoppingCartCouponRemove"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TCnumbers.Iint(pname="quoteId", aname="_quoteId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="storeId", aname="_storeId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=shoppingCartCouponRemoveRequest, encoded="urn:Magento")

class shoppingCartCouponRemoveResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
shoppingCartCouponRemoveResponse.typecode = Struct(pname=("urn:Magento","shoppingCartCouponRemoveResponse"), ofwhat=[ZSI.TC.Boolean(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=shoppingCartCouponRemoveResponse, encoded="urn:Magento")

class catalogProductTagListRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        productId -- part productId
        store -- part store
        """
        self._sessionId =  kw.get("sessionId")
        self._productId =  kw.get("productId")
        self._store =  kw.get("store")
catalogProductTagListRequest.typecode = Struct(pname=("urn:Magento","catalogProductTagList"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="productId", aname="_productId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="store", aname="_store", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductTagListRequest, encoded="urn:Magento")

class catalogProductTagListResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
catalogProductTagListResponse.typecode = Struct(pname=("urn:Magento","catalogProductTagListResponse"), ofwhat=[ns0.catalogProductTagListEntityArray_Def(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductTagListResponse, encoded="urn:Magento")

class catalogProductTagInfoRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        tagId -- part tagId
        store -- part store
        """
        self._sessionId =  kw.get("sessionId")
        self._tagId =  kw.get("tagId")
        self._store =  kw.get("store")
catalogProductTagInfoRequest.typecode = Struct(pname=("urn:Magento","catalogProductTagInfo"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="tagId", aname="_tagId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="store", aname="_store", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductTagInfoRequest, encoded="urn:Magento")

class catalogProductTagInfoResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
catalogProductTagInfoResponse.typecode = Struct(pname=("urn:Magento","catalogProductTagInfoResponse"), ofwhat=[ns0.catalogProductTagInfoEntity_Def(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductTagInfoResponse, encoded="urn:Magento")

class catalogProductTagAddRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        data -- part data
        """
        self._sessionId =  kw.get("sessionId")
        self._data =  kw.get("data")
catalogProductTagAddRequest.typecode = Struct(pname=("urn:Magento","catalogProductTagAdd"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.catalogProductTagAddEntity_Def(pname="data", aname="_data", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductTagAddRequest, encoded="urn:Magento")

class catalogProductTagAddResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
catalogProductTagAddResponse.typecode = Struct(pname=("urn:Magento","catalogProductTagAddResponse"), ofwhat=[ns0.associativeArray_Def(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductTagAddResponse, encoded="urn:Magento")

class catalogProductTagUpdateRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        tagId -- part tagId
        data -- part data
        store -- part store
        """
        self._sessionId =  kw.get("sessionId")
        self._tagId =  kw.get("tagId")
        self._data =  kw.get("data")
        self._store =  kw.get("store")
catalogProductTagUpdateRequest.typecode = Struct(pname=("urn:Magento","catalogProductTagUpdate"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="tagId", aname="_tagId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.catalogProductTagUpdateEntity_Def(pname="data", aname="_data", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="store", aname="_store", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductTagUpdateRequest, encoded="urn:Magento")

class catalogProductTagUpdateResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
catalogProductTagUpdateResponse.typecode = Struct(pname=("urn:Magento","catalogProductTagUpdateResponse"), ofwhat=[ZSI.TC.Boolean(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductTagUpdateResponse, encoded="urn:Magento")

class catalogProductTagRemoveRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        tagId -- part tagId
        """
        self._sessionId =  kw.get("sessionId")
        self._tagId =  kw.get("tagId")
catalogProductTagRemoveRequest.typecode = Struct(pname=("urn:Magento","catalogProductTagRemove"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="tagId", aname="_tagId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductTagRemoveRequest, encoded="urn:Magento")

class catalogProductTagRemoveResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
catalogProductTagRemoveResponse.typecode = Struct(pname=("urn:Magento","catalogProductTagRemoveResponse"), ofwhat=[ZSI.TC.Boolean(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductTagRemoveResponse, encoded="urn:Magento")

class giftMessageForQuoteRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        quoteId -- part quoteId
        giftMessage -- part giftMessage
        storeId -- part storeId
        """
        self._sessionId =  kw.get("sessionId")
        self._quoteId =  kw.get("quoteId")
        self._giftMessage =  kw.get("giftMessage")
        self._storeId =  kw.get("storeId")
giftMessageForQuoteRequest.typecode = Struct(pname=("urn:Magento","giftMessageSetForQuote"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="quoteId", aname="_quoteId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.giftMessageEntity_Def(pname="giftMessage", aname="_giftMessage", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="storeId", aname="_storeId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=giftMessageForQuoteRequest, encoded="urn:Magento")

class giftMessageForQuoteResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
giftMessageForQuoteResponse.typecode = Struct(pname=("urn:Magento","giftMessageSetForQuoteResponse"), ofwhat=[ns0.giftMessageResponse_Def(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=giftMessageForQuoteResponse, encoded="urn:Magento")

class giftMessageForQuoteItemRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        quoteItemId -- part quoteItemId
        giftMessage -- part giftMessage
        storeId -- part storeId
        """
        self._sessionId =  kw.get("sessionId")
        self._quoteItemId =  kw.get("quoteItemId")
        self._giftMessage =  kw.get("giftMessage")
        self._storeId =  kw.get("storeId")
giftMessageForQuoteItemRequest.typecode = Struct(pname=("urn:Magento","giftMessageSetForQuoteItem"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="quoteItemId", aname="_quoteItemId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.giftMessageEntity_Def(pname="giftMessage", aname="_giftMessage", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="storeId", aname="_storeId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=giftMessageForQuoteItemRequest, encoded="urn:Magento")

class giftMessageForQuoteItemResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
giftMessageForQuoteItemResponse.typecode = Struct(pname=("urn:Magento","giftMessageSetForQuoteItemResponse"), ofwhat=[ns0.giftMessageResponse_Def(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=giftMessageForQuoteItemResponse, encoded="urn:Magento")

class giftMessageForQuoteProductRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        quoteId -- part quoteId
        productsAndMessages -- part productsAndMessages
        storeId -- part storeId
        """
        self._sessionId =  kw.get("sessionId")
        self._quoteId =  kw.get("quoteId")
        self._productsAndMessages =  kw.get("productsAndMessages")
        self._storeId =  kw.get("storeId")
giftMessageForQuoteProductRequest.typecode = Struct(pname=("urn:Magento","giftMessageSetForQuoteProduct"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="quoteId", aname="_quoteId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.giftMessageAssociativeProductsEntityArray_Def(pname="productsAndMessages", aname="_productsAndMessages", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="storeId", aname="_storeId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=giftMessageForQuoteProductRequest, encoded="urn:Magento")

class giftMessageForQuoteProductResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        result -- part result
        """
        self._result =  kw.get("result")
giftMessageForQuoteProductResponse.typecode = Struct(pname=("urn:Magento","giftMessageSetForQuoteProductResponse"), ofwhat=[ns0.giftMessageResponseArray_Def(pname="result", aname="_result", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=giftMessageForQuoteProductResponse, encoded="urn:Magento")

class catalogProductDownloadableLinkAddRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        productId -- part productId
        resource -- part resource
        resourceType -- part resourceType
        store -- part store
        identifierType -- part identifierType
        """
        self._sessionId =  kw.get("sessionId")
        self._productId =  kw.get("productId")
        self._resource =  kw.get("resource")
        self._resourceType =  kw.get("resourceType")
        self._store =  kw.get("store")
        self._identifierType =  kw.get("identifierType")
catalogProductDownloadableLinkAddRequest.typecode = Struct(pname=("urn:Magento","catalogProductDownloadableLinkAdd"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="productId", aname="_productId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ns0.catalogProductDownloadableLinkAddEntity_Def(pname="resource", aname="_resource", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="resourceType", aname="_resourceType", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="store", aname="_store", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="identifierType", aname="_identifierType", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductDownloadableLinkAddRequest, encoded="urn:Magento")

class catalogProductDownloadableLinkAddResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        respons -- part respons
        """
        self._respons =  kw.get("respons")
catalogProductDownloadableLinkAddResponse.typecode = Struct(pname=("urn:Magento","catalogProductDownloadableLinkAddResponse"), ofwhat=[ZSI.TCnumbers.Iint(pname="respons", aname="_respons", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductDownloadableLinkAddResponse, encoded="urn:Magento")

class catalogProductDownloadableLinkListRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        productId -- part productId
        store -- part store
        identifierType -- part identifierType
        """
        self._sessionId =  kw.get("sessionId")
        self._productId =  kw.get("productId")
        self._store =  kw.get("store")
        self._identifierType =  kw.get("identifierType")
catalogProductDownloadableLinkListRequest.typecode = Struct(pname=("urn:Magento","catalogProductDownloadableLinkList"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="productId", aname="_productId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="store", aname="_store", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="identifierType", aname="_identifierType", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductDownloadableLinkListRequest, encoded="urn:Magento")

class catalogProductDownloadableLinkListResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        respons -- part respons
        """
        self._respons =  kw.get("respons")
catalogProductDownloadableLinkListResponse.typecode = Struct(pname=("urn:Magento","catalogProductDownloadableLinkListResponse"), ofwhat=[ns0.catalogProductDownloadableLinkInfoEntity_Def(pname="respons", aname="_respons", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductDownloadableLinkListResponse, encoded="urn:Magento")

class catalogProductDownloadableLinkRemoveRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        sessionId -- part sessionId
        linkId -- part linkId
        resourceType -- part resourceType
        """
        self._sessionId =  kw.get("sessionId")
        self._linkId =  kw.get("linkId")
        self._resourceType =  kw.get("resourceType")
catalogProductDownloadableLinkRemoveRequest.typecode = Struct(pname=("urn:Magento","catalogProductDownloadableLinkRemove"), ofwhat=[ZSI.TC.String(pname="sessionId", aname="_sessionId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="linkId", aname="_linkId", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.String(pname="resourceType", aname="_resourceType", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductDownloadableLinkRemoveRequest, encoded="urn:Magento")

class catalogProductDownloadableLinkRemoveResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        respons -- part respons
        """
        self._respons =  kw.get("respons")
catalogProductDownloadableLinkRemoveResponse.typecode = Struct(pname=("urn:Magento","catalogProductDownloadableLinkRemoveResponse"), ofwhat=[ZSI.TC.Boolean(pname="respons", aname="_respons", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=catalogProductDownloadableLinkRemoveResponse, encoded="urn:Magento")


# Service Skeletons
class MagentoService(ServiceSOAPBinding):
    soapAction = {}
    root = {}

    def __init__(self, post='/magento/index.php/api/v2_soap/index/', **kw):
        ServiceSOAPBinding.__init__(self, post)

    def soap_endSession(self, ps, **kw):
        request = ps.Parse(endSession.typecode)
        return request,endSessionResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_endSession'
    root[(endSession.typecode.nspname,endSession.typecode.pname)] = 'soap_endSession'

    def soap_login(self, ps, **kw):
        request = ps.Parse(login.typecode)
        return request,loginResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_login'
    root[(login.typecode.nspname,login.typecode.pname)] = 'soap_login'

    def soap_startSession(self, ps, **kw):
        request = ps.Parse(startSession.typecode)
        return request,startSessionResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_startSession'
    root[(startSession.typecode.nspname,startSession.typecode.pname)] = 'soap_startSession'

    def soap_resources(self, ps, **kw):
        request = ps.Parse(resourcesRequest.typecode)
        return request,resourcesResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_resources'
    root[(resourcesRequest.typecode.nspname,resourcesRequest.typecode.pname)] = 'soap_resources'

    def soap_globalFaults(self, ps, **kw):
        request = ps.Parse(globalFaults.typecode)
        return request,globalFaultsResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_globalFaults'
    root[(globalFaults.typecode.nspname,globalFaults.typecode.pname)] = 'soap_globalFaults'

    def soap_resourceFaults(self, ps, **kw):
        request = ps.Parse(resourceFaults.typecode)
        return request,resourceFaultsResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_resourceFaults'
    root[(resourceFaults.typecode.nspname,resourceFaults.typecode.pname)] = 'soap_resourceFaults'

    def soap_storeList(self, ps, **kw):
        request = ps.Parse(storeListRequest.typecode)
        return request,storeListResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_storeList'
    root[(storeListRequest.typecode.nspname,storeListRequest.typecode.pname)] = 'soap_storeList'

    def soap_storeInfo(self, ps, **kw):
        request = ps.Parse(storeInfoRequest.typecode)
        return request,storeInfoResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_storeInfo'
    root[(storeInfoRequest.typecode.nspname,storeInfoRequest.typecode.pname)] = 'soap_storeInfo'

    def soap_magentoInfo(self, ps, **kw):
        request = ps.Parse(magentoInfoRequest.typecode)
        return request,magentoInfoResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_magentoInfo'
    root[(magentoInfoRequest.typecode.nspname,magentoInfoRequest.typecode.pname)] = 'soap_magentoInfo'

    def soap_directoryCountryList(self, ps, **kw):
        request = ps.Parse(directoryCountryListRequest.typecode)
        return request,directoryCountryListResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_directoryCountryList'
    root[(directoryCountryListRequest.typecode.nspname,directoryCountryListRequest.typecode.pname)] = 'soap_directoryCountryList'

    def soap_directoryRegionList(self, ps, **kw):
        request = ps.Parse(directoryRegionListRequest.typecode)
        return request,directoryRegionListResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_directoryRegionList'
    root[(directoryRegionListRequest.typecode.nspname,directoryRegionListRequest.typecode.pname)] = 'soap_directoryRegionList'

    def soap_customerCustomerList(self, ps, **kw):
        request = ps.Parse(customerCustomerListRequest.typecode)
        return request,customerCustomerListResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_customerCustomerList'
    root[(customerCustomerListRequest.typecode.nspname,customerCustomerListRequest.typecode.pname)] = 'soap_customerCustomerList'

    def soap_customerCustomerCreate(self, ps, **kw):
        request = ps.Parse(customerCustomerCreateRequest.typecode)
        return request,customerCustomerCreateResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_customerCustomerCreate'
    root[(customerCustomerCreateRequest.typecode.nspname,customerCustomerCreateRequest.typecode.pname)] = 'soap_customerCustomerCreate'

    def soap_customerCustomerInfo(self, ps, **kw):
        request = ps.Parse(customerCustomerInfoRequest.typecode)
        return request,customerCustomerInfoResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_customerCustomerInfo'
    root[(customerCustomerInfoRequest.typecode.nspname,customerCustomerInfoRequest.typecode.pname)] = 'soap_customerCustomerInfo'

    def soap_customerCustomerUpdate(self, ps, **kw):
        request = ps.Parse(customerCustomerUpdateRequest.typecode)
        return request,customerCustomerUpdateResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_customerCustomerUpdate'
    root[(customerCustomerUpdateRequest.typecode.nspname,customerCustomerUpdateRequest.typecode.pname)] = 'soap_customerCustomerUpdate'

    def soap_customerCustomerDelete(self, ps, **kw):
        request = ps.Parse(customerCustomerDeleteRequest.typecode)
        return request,customerCustomerDeleteResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_customerCustomerDelete'
    root[(customerCustomerDeleteRequest.typecode.nspname,customerCustomerDeleteRequest.typecode.pname)] = 'soap_customerCustomerDelete'

    def soap_customerGroupList(self, ps, **kw):
        request = ps.Parse(customerGroupListRequest.typecode)
        return request,customerGroupListResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_customerGroupList'
    root[(customerGroupListRequest.typecode.nspname,customerGroupListRequest.typecode.pname)] = 'soap_customerGroupList'

    def soap_customerAddressList(self, ps, **kw):
        request = ps.Parse(customerAddressListRequest.typecode)
        return request,customerAddressListResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_customerAddressList'
    root[(customerAddressListRequest.typecode.nspname,customerAddressListRequest.typecode.pname)] = 'soap_customerAddressList'

    def soap_customerAddressCreate(self, ps, **kw):
        request = ps.Parse(customerAddressCreateRequest.typecode)
        return request,customerAddressCreateResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_customerAddressCreate'
    root[(customerAddressCreateRequest.typecode.nspname,customerAddressCreateRequest.typecode.pname)] = 'soap_customerAddressCreate'

    def soap_customerAddressInfo(self, ps, **kw):
        request = ps.Parse(customerAddressInfoRequest.typecode)
        return request,customerAddressInfoResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_customerAddressInfo'
    root[(customerAddressInfoRequest.typecode.nspname,customerAddressInfoRequest.typecode.pname)] = 'soap_customerAddressInfo'

    def soap_customerAddressUpdate(self, ps, **kw):
        request = ps.Parse(customerAddressUpdateRequest.typecode)
        return request,customerAddressUpdateResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_customerAddressUpdate'
    root[(customerAddressUpdateRequest.typecode.nspname,customerAddressUpdateRequest.typecode.pname)] = 'soap_customerAddressUpdate'

    def soap_customerAddressDelete(self, ps, **kw):
        request = ps.Parse(customerAddressDeleteRequest.typecode)
        return request,customerAddressDeleteResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_customerAddressDelete'
    root[(customerAddressDeleteRequest.typecode.nspname,customerAddressDeleteRequest.typecode.pname)] = 'soap_customerAddressDelete'

    def soap_catalogCategoryCurrentStore(self, ps, **kw):
        request = ps.Parse(catalogCategoryCurrentStoreRequest.typecode)
        return request,catalogCategoryCurrentStoreResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogCategoryCurrentStore'
    root[(catalogCategoryCurrentStoreRequest.typecode.nspname,catalogCategoryCurrentStoreRequest.typecode.pname)] = 'soap_catalogCategoryCurrentStore'

    def soap_catalogCategoryTree(self, ps, **kw):
        request = ps.Parse(catalogCategoryTreeRequest.typecode)
        return request,catalogCategoryTreeResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogCategoryTree'
    root[(catalogCategoryTreeRequest.typecode.nspname,catalogCategoryTreeRequest.typecode.pname)] = 'soap_catalogCategoryTree'

    def soap_catalogCategoryLevel(self, ps, **kw):
        request = ps.Parse(catalogCategoryLevelRequest.typecode)
        return request,catalogCategoryLevelResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogCategoryLevel'
    root[(catalogCategoryLevelRequest.typecode.nspname,catalogCategoryLevelRequest.typecode.pname)] = 'soap_catalogCategoryLevel'

    def soap_catalogCategoryInfo(self, ps, **kw):
        request = ps.Parse(catalogCategoryInfoRequest.typecode)
        return request,catalogCategoryInfoResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogCategoryInfo'
    root[(catalogCategoryInfoRequest.typecode.nspname,catalogCategoryInfoRequest.typecode.pname)] = 'soap_catalogCategoryInfo'

    def soap_catalogCategoryCreate(self, ps, **kw):
        request = ps.Parse(catalogCategoryCreateRequest.typecode)
        return request,catalogCategoryCreateResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogCategoryCreate'
    root[(catalogCategoryCreateRequest.typecode.nspname,catalogCategoryCreateRequest.typecode.pname)] = 'soap_catalogCategoryCreate'

    def soap_catalogCategoryUpdate(self, ps, **kw):
        request = ps.Parse(catalogCategoryUpdateRequest.typecode)
        return request,catalogCategoryUpdateResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogCategoryUpdate'
    root[(catalogCategoryUpdateRequest.typecode.nspname,catalogCategoryUpdateRequest.typecode.pname)] = 'soap_catalogCategoryUpdate'

    def soap_catalogCategoryMove(self, ps, **kw):
        request = ps.Parse(catalogCategoryMoveRequest.typecode)
        return request,catalogCategoryMoveResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogCategoryMove'
    root[(catalogCategoryMoveRequest.typecode.nspname,catalogCategoryMoveRequest.typecode.pname)] = 'soap_catalogCategoryMove'

    def soap_catalogCategoryDelete(self, ps, **kw):
        request = ps.Parse(catalogCategoryDeleteRequest.typecode)
        return request,catalogCategoryDeleteResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogCategoryDelete'
    root[(catalogCategoryDeleteRequest.typecode.nspname,catalogCategoryDeleteRequest.typecode.pname)] = 'soap_catalogCategoryDelete'

    def soap_catalogCategoryAssignedProducts(self, ps, **kw):
        request = ps.Parse(catalogCategoryAssignedProductsRequest.typecode)
        return request,catalogCategoryAssignedProductsResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogCategoryAssignedProducts'
    root[(catalogCategoryAssignedProductsRequest.typecode.nspname,catalogCategoryAssignedProductsRequest.typecode.pname)] = 'soap_catalogCategoryAssignedProducts'

    def soap_catalogCategoryAssignProduct(self, ps, **kw):
        request = ps.Parse(catalogCategoryAssignProductRequest.typecode)
        return request,catalogCategoryAssignProductResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogCategoryAssignProduct'
    root[(catalogCategoryAssignProductRequest.typecode.nspname,catalogCategoryAssignProductRequest.typecode.pname)] = 'soap_catalogCategoryAssignProduct'

    def soap_catalogCategoryUpdateProduct(self, ps, **kw):
        request = ps.Parse(catalogCategoryUpdateProductRequest.typecode)
        return request,catalogCategoryUpdateProductResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogCategoryUpdateProduct'
    root[(catalogCategoryUpdateProductRequest.typecode.nspname,catalogCategoryUpdateProductRequest.typecode.pname)] = 'soap_catalogCategoryUpdateProduct'

    def soap_catalogCategoryRemoveProduct(self, ps, **kw):
        request = ps.Parse(catalogCategoryRemoveProductRequest.typecode)
        return request,catalogCategoryRemoveProductResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogCategoryRemoveProduct'
    root[(catalogCategoryRemoveProductRequest.typecode.nspname,catalogCategoryRemoveProductRequest.typecode.pname)] = 'soap_catalogCategoryRemoveProduct'

    def soap_catalogProductCurrentStore(self, ps, **kw):
        request = ps.Parse(catalogProductCurrentStoreRequest.typecode)
        return request,catalogProductCurrentStoreResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductCurrentStore'
    root[(catalogProductCurrentStoreRequest.typecode.nspname,catalogProductCurrentStoreRequest.typecode.pname)] = 'soap_catalogProductCurrentStore'

    def soap_catalogProductListOfAdditionalAttributes(self, ps, **kw):
        request = ps.Parse(catalogProductListOfAdditionalAttributesRequest.typecode)
        return request,catalogProductListOfAdditionalAttributesResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductListOfAdditionalAttributes'
    root[(catalogProductListOfAdditionalAttributesRequest.typecode.nspname,catalogProductListOfAdditionalAttributesRequest.typecode.pname)] = 'soap_catalogProductListOfAdditionalAttributes'

    def soap_catalogProductList(self, ps, **kw):
        request = ps.Parse(catalogProductListRequest.typecode)
        return request,catalogProductListResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductList'
    root[(catalogProductListRequest.typecode.nspname,catalogProductListRequest.typecode.pname)] = 'soap_catalogProductList'

    def soap_catalogProductInfo(self, ps, **kw):
        request = ps.Parse(catalogProductInfoRequest.typecode)
        return request,catalogProductInfoResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductInfo'
    root[(catalogProductInfoRequest.typecode.nspname,catalogProductInfoRequest.typecode.pname)] = 'soap_catalogProductInfo'

    def soap_catalogProductCreate(self, ps, **kw):
        request = ps.Parse(catalogProductCreateRequest.typecode)
        return request,catalogProductCreateResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductCreate'
    root[(catalogProductCreateRequest.typecode.nspname,catalogProductCreateRequest.typecode.pname)] = 'soap_catalogProductCreate'

    def soap_catalogProductUpdate(self, ps, **kw):
        request = ps.Parse(catalogProductUpdateRequest.typecode)
        return request,catalogProductUpdateResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductUpdate'
    root[(catalogProductUpdateRequest.typecode.nspname,catalogProductUpdateRequest.typecode.pname)] = 'soap_catalogProductUpdate'

    def soap_catalogProductSetSpecialPrice(self, ps, **kw):
        request = ps.Parse(catalogProductSetSpecialPriceRequest.typecode)
        return request,catalogProductSetSpecialPriceResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductSetSpecialPrice'
    root[(catalogProductSetSpecialPriceRequest.typecode.nspname,catalogProductSetSpecialPriceRequest.typecode.pname)] = 'soap_catalogProductSetSpecialPrice'

    def soap_catalogProductGetSpecialPrice(self, ps, **kw):
        request = ps.Parse(catalogProductGetSpecialPriceRequest.typecode)
        return request,catalogProductGetSpecialPriceResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductGetSpecialPrice'
    root[(catalogProductGetSpecialPriceRequest.typecode.nspname,catalogProductGetSpecialPriceRequest.typecode.pname)] = 'soap_catalogProductGetSpecialPrice'

    def soap_catalogProductDelete(self, ps, **kw):
        request = ps.Parse(catalogProductDeleteRequest.typecode)
        return request,catalogProductDeleteResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductDelete'
    root[(catalogProductDeleteRequest.typecode.nspname,catalogProductDeleteRequest.typecode.pname)] = 'soap_catalogProductDelete'

    def soap_catalogProductAttributeCurrentStore(self, ps, **kw):
        request = ps.Parse(catalogProductAttributeCurrentStoreRequest.typecode)
        return request,catalogProductAttributeCurrentStoreResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductAttributeCurrentStore'
    root[(catalogProductAttributeCurrentStoreRequest.typecode.nspname,catalogProductAttributeCurrentStoreRequest.typecode.pname)] = 'soap_catalogProductAttributeCurrentStore'

    def soap_catalogProductAttributeSetCreate(self, ps, **kw):
        request = ps.Parse(catalogProductAttributeSetCreateRequest.typecode)
        return request,catalogProductAttributeSetCreateResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductAttributeSetCreate'
    root[(catalogProductAttributeSetCreateRequest.typecode.nspname,catalogProductAttributeSetCreateRequest.typecode.pname)] = 'soap_catalogProductAttributeSetCreate'

    def soap_catalogProductAttributeList(self, ps, **kw):
        request = ps.Parse(catalogProductAttributeListRequest.typecode)
        return request,catalogProductAttributeListResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductAttributeList'
    root[(catalogProductAttributeListRequest.typecode.nspname,catalogProductAttributeListRequest.typecode.pname)] = 'soap_catalogProductAttributeList'

    def soap_catalogProductAttributeOptions(self, ps, **kw):
        request = ps.Parse(catalogProductAttributeOptionsRequest.typecode)
        return request,catalogProductAttributeOptionsResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductAttributeOptions'
    root[(catalogProductAttributeOptionsRequest.typecode.nspname,catalogProductAttributeOptionsRequest.typecode.pname)] = 'soap_catalogProductAttributeOptions'

    def soap_catalogProductAttributeSetRemove(self, ps, **kw):
        request = ps.Parse(catalogProductAttributeSetRemoveRequest.typecode)
        return request,catalogProductAttributeSetRemoveResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductAttributeSetRemove'
    root[(catalogProductAttributeSetRemoveRequest.typecode.nspname,catalogProductAttributeSetRemoveRequest.typecode.pname)] = 'soap_catalogProductAttributeSetRemove'

    def soap_catalogProductAttributeSetList(self, ps, **kw):
        request = ps.Parse(catalogProductAttributeSetListRequest.typecode)
        return request,catalogProductAttributeSetListResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductAttributeSetList'
    root[(catalogProductAttributeSetListRequest.typecode.nspname,catalogProductAttributeSetListRequest.typecode.pname)] = 'soap_catalogProductAttributeSetList'

    def soap_catalogProductAttributeSetAttributeAdd(self, ps, **kw):
        request = ps.Parse(catalogProductAttributeSetAttributeAddRequest.typecode)
        return request,catalogProductAttributeSetAttributeAddResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductAttributeSetAttributeAdd'
    root[(catalogProductAttributeSetAttributeAddRequest.typecode.nspname,catalogProductAttributeSetAttributeAddRequest.typecode.pname)] = 'soap_catalogProductAttributeSetAttributeAdd'

    def soap_catalogProductAttributeSetAttributeRemove(self, ps, **kw):
        request = ps.Parse(catalogProductAttributeSetAttributeRemoveRequest.typecode)
        return request,catalogProductAttributeSetAttributeRemoveResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductAttributeSetAttributeRemove'
    root[(catalogProductAttributeSetAttributeRemoveRequest.typecode.nspname,catalogProductAttributeSetAttributeRemoveRequest.typecode.pname)] = 'soap_catalogProductAttributeSetAttributeRemove'

    def soap_catalogProductAttributeSetGroupAdd(self, ps, **kw):
        request = ps.Parse(catalogProductAttributeSetGroupAddRequest.typecode)
        return request,catalogProductAttributeSetGroupAddResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductAttributeSetGroupAdd'
    root[(catalogProductAttributeSetGroupAddRequest.typecode.nspname,catalogProductAttributeSetGroupAddRequest.typecode.pname)] = 'soap_catalogProductAttributeSetGroupAdd'

    def soap_catalogProductAttributeSetGroupRename(self, ps, **kw):
        request = ps.Parse(catalogProductAttributeSetGroupRenameRequest.typecode)
        return request,catalogProductAttributeSetGroupRenameResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductAttributeSetGroupRename'
    root[(catalogProductAttributeSetGroupRenameRequest.typecode.nspname,catalogProductAttributeSetGroupRenameRequest.typecode.pname)] = 'soap_catalogProductAttributeSetGroupRename'

    def soap_catalogProductAttributeSetGroupRemove(self, ps, **kw):
        request = ps.Parse(catalogProductAttributeSetGroupRemoveRequest.typecode)
        return request,catalogProductAttributeSetGroupRemoveResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductAttributeSetGroupRemove'
    root[(catalogProductAttributeSetGroupRemoveRequest.typecode.nspname,catalogProductAttributeSetGroupRemoveRequest.typecode.pname)] = 'soap_catalogProductAttributeSetGroupRemove'

    def soap_catalogProductAttributeTypes(self, ps, **kw):
        request = ps.Parse(catalogProductAttributeTypesRequest.typecode)
        return request,catalogProductAttributeTypesResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductAttributeTypes'
    root[(catalogProductAttributeTypesRequest.typecode.nspname,catalogProductAttributeTypesRequest.typecode.pname)] = 'soap_catalogProductAttributeTypes'

    def soap_catalogProductAttributeCreate(self, ps, **kw):
        request = ps.Parse(catalogProductAttributeCreateRequest.typecode)
        return request,catalogProductAttributeCreateResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductAttributeCreate'
    root[(catalogProductAttributeCreateRequest.typecode.nspname,catalogProductAttributeCreateRequest.typecode.pname)] = 'soap_catalogProductAttributeCreate'

    def soap_catalogCategoryAttributeCurrentStore(self, ps, **kw):
        request = ps.Parse(catalogCategoryAttributeCurrentStoreRequest.typecode)
        return request,catalogCategoryAttributeCurrentStoreResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogCategoryAttributeCurrentStore'
    root[(catalogCategoryAttributeCurrentStoreRequest.typecode.nspname,catalogCategoryAttributeCurrentStoreRequest.typecode.pname)] = 'soap_catalogCategoryAttributeCurrentStore'

    def soap_catalogProductAttributeMediaCurrentStore(self, ps, **kw):
        request = ps.Parse(catalogProductAttributeMediaCurrentStoreRequest.typecode)
        return request,catalogProductAttributeMediaCurrentStoreResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductAttributeMediaCurrentStore'
    root[(catalogProductAttributeMediaCurrentStoreRequest.typecode.nspname,catalogProductAttributeMediaCurrentStoreRequest.typecode.pname)] = 'soap_catalogProductAttributeMediaCurrentStore'

    def soap_catalogProductAttributeRemove(self, ps, **kw):
        request = ps.Parse(catalogProductAttributeRemoveRequest.typecode)
        return request,catalogProductAttributeRemoveResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductAttributeRemove'
    root[(catalogProductAttributeRemoveRequest.typecode.nspname,catalogProductAttributeRemoveRequest.typecode.pname)] = 'soap_catalogProductAttributeRemove'

    def soap_catalogProductAttributeInfo(self, ps, **kw):
        request = ps.Parse(catalogProductAttributeInfoRequest.typecode)
        return request,catalogProductAttributeInfoResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductAttributeInfo'
    root[(catalogProductAttributeInfoRequest.typecode.nspname,catalogProductAttributeInfoRequest.typecode.pname)] = 'soap_catalogProductAttributeInfo'

    def soap_catalogProductAttributeUpdate(self, ps, **kw):
        request = ps.Parse(catalogProductAttributeUpdateRequest.typecode)
        return request,catalogProductAttributeUpdateResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductAttributeUpdate'
    root[(catalogProductAttributeUpdateRequest.typecode.nspname,catalogProductAttributeUpdateRequest.typecode.pname)] = 'soap_catalogProductAttributeUpdate'

    def soap_catalogProductAttributeAddOption(self, ps, **kw):
        request = ps.Parse(catalogProductAttributeAddOptionRequest.typecode)
        return request,catalogProductAttributeAddOptionResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductAttributeAddOption'
    root[(catalogProductAttributeAddOptionRequest.typecode.nspname,catalogProductAttributeAddOptionRequest.typecode.pname)] = 'soap_catalogProductAttributeAddOption'

    def soap_catalogProductAttributeRemoveOption(self, ps, **kw):
        request = ps.Parse(catalogProductAttributeRemoveOptionRequest.typecode)
        return request,catalogProductAttributeRemoveOptionResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductAttributeRemoveOption'
    root[(catalogProductAttributeRemoveOptionRequest.typecode.nspname,catalogProductAttributeRemoveOptionRequest.typecode.pname)] = 'soap_catalogProductAttributeRemoveOption'

    def soap_catalogProductTypeList(self, ps, **kw):
        request = ps.Parse(catalogProductTypeListRequest.typecode)
        return request,catalogProductTypeListResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductTypeList'
    root[(catalogProductTypeListRequest.typecode.nspname,catalogProductTypeListRequest.typecode.pname)] = 'soap_catalogProductTypeList'

    def soap_catalogProductAttributeTierPriceInfo(self, ps, **kw):
        request = ps.Parse(catalogProductAttributeTierPriceInfoRequest.typecode)
        return request,catalogProductAttributeTierPriceInfoResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductAttributeTierPriceInfo'
    root[(catalogProductAttributeTierPriceInfoRequest.typecode.nspname,catalogProductAttributeTierPriceInfoRequest.typecode.pname)] = 'soap_catalogProductAttributeTierPriceInfo'

    def soap_catalogProductAttributeTierPriceUpdate(self, ps, **kw):
        request = ps.Parse(catalogProductAttributeTierPriceUpdateRequest.typecode)
        return request,catalogProductAttributeTierPriceUpdateResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductAttributeTierPriceUpdate'
    root[(catalogProductAttributeTierPriceUpdateRequest.typecode.nspname,catalogProductAttributeTierPriceUpdateRequest.typecode.pname)] = 'soap_catalogProductAttributeTierPriceUpdate'

    def soap_catalogCategoryAttributeList(self, ps, **kw):
        request = ps.Parse(catalogCategoryAttributeListRequest.typecode)
        return request,catalogCategoryAttributeListResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogCategoryAttributeList'
    root[(catalogCategoryAttributeListRequest.typecode.nspname,catalogCategoryAttributeListRequest.typecode.pname)] = 'soap_catalogCategoryAttributeList'

    def soap_catalogCategoryAttributeOptions(self, ps, **kw):
        request = ps.Parse(catalogCategoryAttributeOptionsRequest.typecode)
        return request,catalogCategoryAttributeOptionsResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogCategoryAttributeOptions'
    root[(catalogCategoryAttributeOptionsRequest.typecode.nspname,catalogCategoryAttributeOptionsRequest.typecode.pname)] = 'soap_catalogCategoryAttributeOptions'

    def soap_catalogProductAttributeMediaList(self, ps, **kw):
        request = ps.Parse(catalogProductAttributeMediaListRequest.typecode)
        return request,catalogProductAttributeMediaListResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductAttributeMediaList'
    root[(catalogProductAttributeMediaListRequest.typecode.nspname,catalogProductAttributeMediaListRequest.typecode.pname)] = 'soap_catalogProductAttributeMediaList'

    def soap_catalogProductAttributeMediaInfo(self, ps, **kw):
        request = ps.Parse(catalogProductAttributeMediaInfoRequest.typecode)
        return request,catalogProductAttributeMediaInfoResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductAttributeMediaInfo'
    root[(catalogProductAttributeMediaInfoRequest.typecode.nspname,catalogProductAttributeMediaInfoRequest.typecode.pname)] = 'soap_catalogProductAttributeMediaInfo'

    def soap_catalogProductAttributeMediaTypes(self, ps, **kw):
        request = ps.Parse(catalogProductAttributeMediaTypesRequest.typecode)
        return request,catalogProductAttributeMediaTypesResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductAttributeMediaTypes'
    root[(catalogProductAttributeMediaTypesRequest.typecode.nspname,catalogProductAttributeMediaTypesRequest.typecode.pname)] = 'soap_catalogProductAttributeMediaTypes'

    def soap_catalogProductAttributeMediaCreate(self, ps, **kw):
        request = ps.Parse(catalogProductAttributeMediaCreateRequest.typecode)
        return request,catalogProductAttributeMediaCreateResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductAttributeMediaCreate'
    root[(catalogProductAttributeMediaCreateRequest.typecode.nspname,catalogProductAttributeMediaCreateRequest.typecode.pname)] = 'soap_catalogProductAttributeMediaCreate'

    def soap_catalogProductAttributeMediaUpdate(self, ps, **kw):
        request = ps.Parse(catalogProductAttributeMediaUpdateRequest.typecode)
        return request,catalogProductAttributeMediaUpdateResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductAttributeMediaUpdate'
    root[(catalogProductAttributeMediaUpdateRequest.typecode.nspname,catalogProductAttributeMediaUpdateRequest.typecode.pname)] = 'soap_catalogProductAttributeMediaUpdate'

    def soap_catalogProductAttributeMediaRemove(self, ps, **kw):
        request = ps.Parse(catalogProductAttributeMediaRemoveRequest.typecode)
        return request,catalogProductAttributeMediaRemoveResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductAttributeMediaRemove'
    root[(catalogProductAttributeMediaRemoveRequest.typecode.nspname,catalogProductAttributeMediaRemoveRequest.typecode.pname)] = 'soap_catalogProductAttributeMediaRemove'

    def soap_catalogProductLinkList(self, ps, **kw):
        request = ps.Parse(catalogProductLinkListRequest.typecode)
        return request,catalogProductLinkListResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductLinkList'
    root[(catalogProductLinkListRequest.typecode.nspname,catalogProductLinkListRequest.typecode.pname)] = 'soap_catalogProductLinkList'

    def soap_catalogProductLinkAssign(self, ps, **kw):
        request = ps.Parse(catalogProductLinkAssignRequest.typecode)
        return request,catalogProductLinkAssignResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductLinkAssign'
    root[(catalogProductLinkAssignRequest.typecode.nspname,catalogProductLinkAssignRequest.typecode.pname)] = 'soap_catalogProductLinkAssign'

    def soap_catalogProductLinkUpdate(self, ps, **kw):
        request = ps.Parse(catalogProductLinkUpdateRequest.typecode)
        return request,catalogProductLinkUpdateResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductLinkUpdate'
    root[(catalogProductLinkUpdateRequest.typecode.nspname,catalogProductLinkUpdateRequest.typecode.pname)] = 'soap_catalogProductLinkUpdate'

    def soap_catalogProductLinkRemove(self, ps, **kw):
        request = ps.Parse(catalogProductLinkRemoveRequest.typecode)
        return request,catalogProductLinkRemoveResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductLinkRemove'
    root[(catalogProductLinkRemoveRequest.typecode.nspname,catalogProductLinkRemoveRequest.typecode.pname)] = 'soap_catalogProductLinkRemove'

    def soap_catalogProductLinkTypes(self, ps, **kw):
        request = ps.Parse(catalogProductLinkTypesRequest.typecode)
        return request,catalogProductLinkTypesResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductLinkTypes'
    root[(catalogProductLinkTypesRequest.typecode.nspname,catalogProductLinkTypesRequest.typecode.pname)] = 'soap_catalogProductLinkTypes'

    def soap_catalogProductLinkAttributes(self, ps, **kw):
        request = ps.Parse(catalogProductLinkAttributesRequest.typecode)
        return request,catalogProductLinkAttributesResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductLinkAttributes'
    root[(catalogProductLinkAttributesRequest.typecode.nspname,catalogProductLinkAttributesRequest.typecode.pname)] = 'soap_catalogProductLinkAttributes'

    def soap_catalogProductCustomOptionAdd(self, ps, **kw):
        request = ps.Parse(catalogProductCustomOptionAddRequest.typecode)
        return request,catalogProductCustomOptionAddResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductCustomOptionAdd'
    root[(catalogProductCustomOptionAddRequest.typecode.nspname,catalogProductCustomOptionAddRequest.typecode.pname)] = 'soap_catalogProductCustomOptionAdd'

    def soap_catalogProductCustomOptionUpdate(self, ps, **kw):
        request = ps.Parse(catalogProductCustomOptionUpdateRequest.typecode)
        return request,catalogProductCustomOptionUpdateResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductCustomOptionUpdate'
    root[(catalogProductCustomOptionUpdateRequest.typecode.nspname,catalogProductCustomOptionUpdateRequest.typecode.pname)] = 'soap_catalogProductCustomOptionUpdate'

    def soap_catalogProductCustomOptionInfo(self, ps, **kw):
        request = ps.Parse(catalogProductCustomOptionInfoRequest.typecode)
        return request,catalogProductCustomOptionInfoResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductCustomOptionInfo'
    root[(catalogProductCustomOptionInfoRequest.typecode.nspname,catalogProductCustomOptionInfoRequest.typecode.pname)] = 'soap_catalogProductCustomOptionInfo'

    def soap_catalogProductCustomOptionTypes(self, ps, **kw):
        request = ps.Parse(catalogProductCustomOptionTypesRequest.typecode)
        return request,catalogProductCustomOptionTypesResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductCustomOptionTypes'
    root[(catalogProductCustomOptionTypesRequest.typecode.nspname,catalogProductCustomOptionTypesRequest.typecode.pname)] = 'soap_catalogProductCustomOptionTypes'

    def soap_catalogProductCustomOptionValueInfo(self, ps, **kw):
        request = ps.Parse(catalogProductCustomOptionValueInfoRequest.typecode)
        return request,catalogProductCustomOptionValueInfoResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductCustomOptionValueInfo'
    root[(catalogProductCustomOptionValueInfoRequest.typecode.nspname,catalogProductCustomOptionValueInfoRequest.typecode.pname)] = 'soap_catalogProductCustomOptionValueInfo'

    def soap_catalogProductCustomOptionValueList(self, ps, **kw):
        request = ps.Parse(catalogProductCustomOptionValueListRequest.typecode)
        return request,catalogProductCustomOptionValueListResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductCustomOptionValueList'
    root[(catalogProductCustomOptionValueListRequest.typecode.nspname,catalogProductCustomOptionValueListRequest.typecode.pname)] = 'soap_catalogProductCustomOptionValueList'

    def soap_catalogProductCustomOptionValueAdd(self, ps, **kw):
        request = ps.Parse(catalogProductCustomOptionValueAddRequest.typecode)
        return request,catalogProductCustomOptionValueAddResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductCustomOptionValueAdd'
    root[(catalogProductCustomOptionValueAddRequest.typecode.nspname,catalogProductCustomOptionValueAddRequest.typecode.pname)] = 'soap_catalogProductCustomOptionValueAdd'

    def soap_catalogProductCustomOptionValueUpdate(self, ps, **kw):
        request = ps.Parse(catalogProductCustomOptionValueUpdateRequest.typecode)
        return request,catalogProductCustomOptionValueUpdateResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductCustomOptionValueUpdate'
    root[(catalogProductCustomOptionValueUpdateRequest.typecode.nspname,catalogProductCustomOptionValueUpdateRequest.typecode.pname)] = 'soap_catalogProductCustomOptionValueUpdate'

    def soap_catalogProductCustomOptionValueRemove(self, ps, **kw):
        request = ps.Parse(catalogProductCustomOptionValueRemoveRequest.typecode)
        return request,catalogProductCustomOptionValueRemoveResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductCustomOptionValueRemove'
    root[(catalogProductCustomOptionValueRemoveRequest.typecode.nspname,catalogProductCustomOptionValueRemoveRequest.typecode.pname)] = 'soap_catalogProductCustomOptionValueRemove'

    def soap_catalogProductCustomOptionList(self, ps, **kw):
        request = ps.Parse(catalogProductCustomOptionListRequest.typecode)
        return request,catalogProductCustomOptionListResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductCustomOptionList'
    root[(catalogProductCustomOptionListRequest.typecode.nspname,catalogProductCustomOptionListRequest.typecode.pname)] = 'soap_catalogProductCustomOptionList'

    def soap_catalogProductCustomOptionRemove(self, ps, **kw):
        request = ps.Parse(catalogProductCustomOptionRemoveRequest.typecode)
        return request,catalogProductCustomOptionRemoveResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductCustomOptionRemove'
    root[(catalogProductCustomOptionRemoveRequest.typecode.nspname,catalogProductCustomOptionRemoveRequest.typecode.pname)] = 'soap_catalogProductCustomOptionRemove'

    def soap_salesOrderList(self, ps, **kw):
        request = ps.Parse(salesOrderListRequest.typecode)
        return request,salesOrderListResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_salesOrderList'
    root[(salesOrderListRequest.typecode.nspname,salesOrderListRequest.typecode.pname)] = 'soap_salesOrderList'

    def soap_salesOrderInfo(self, ps, **kw):
        request = ps.Parse(salesOrderInfoRequest.typecode)
        return request,salesOrderInfoResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_salesOrderInfo'
    root[(salesOrderInfoRequest.typecode.nspname,salesOrderInfoRequest.typecode.pname)] = 'soap_salesOrderInfo'

    def soap_salesOrderAddComment(self, ps, **kw):
        request = ps.Parse(salesOrderAddCommentRequest.typecode)
        return request,salesOrderAddCommentResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_salesOrderAddComment'
    root[(salesOrderAddCommentRequest.typecode.nspname,salesOrderAddCommentRequest.typecode.pname)] = 'soap_salesOrderAddComment'

    def soap_salesOrderHold(self, ps, **kw):
        request = ps.Parse(salesOrderHoldRequest.typecode)
        return request,salesOrderHoldResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_salesOrderHold'
    root[(salesOrderHoldRequest.typecode.nspname,salesOrderHoldRequest.typecode.pname)] = 'soap_salesOrderHold'

    def soap_salesOrderUnhold(self, ps, **kw):
        request = ps.Parse(salesOrderUnholdRequest.typecode)
        return request,salesOrderUnholdResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_salesOrderUnhold'
    root[(salesOrderUnholdRequest.typecode.nspname,salesOrderUnholdRequest.typecode.pname)] = 'soap_salesOrderUnhold'

    def soap_salesOrderCancel(self, ps, **kw):
        request = ps.Parse(salesOrderCancelRequest.typecode)
        return request,salesOrderCancelResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_salesOrderCancel'
    root[(salesOrderCancelRequest.typecode.nspname,salesOrderCancelRequest.typecode.pname)] = 'soap_salesOrderCancel'

    def soap_salesOrderShipmentList(self, ps, **kw):
        request = ps.Parse(salesOrderShipmentListRequest.typecode)
        return request,salesOrderShipmentListResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_salesOrderShipmentList'
    root[(salesOrderShipmentListRequest.typecode.nspname,salesOrderShipmentListRequest.typecode.pname)] = 'soap_salesOrderShipmentList'

    def soap_salesOrderShipmentInfo(self, ps, **kw):
        request = ps.Parse(salesOrderShipmentInfoRequest.typecode)
        return request,salesOrderShipmentInfoResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_salesOrderShipmentInfo'
    root[(salesOrderShipmentInfoRequest.typecode.nspname,salesOrderShipmentInfoRequest.typecode.pname)] = 'soap_salesOrderShipmentInfo'

    def soap_salesOrderShipmentCreate(self, ps, **kw):
        request = ps.Parse(salesOrderShipmentCreateRequest.typecode)
        return request,salesOrderShipmentCreateResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_salesOrderShipmentCreate'
    root[(salesOrderShipmentCreateRequest.typecode.nspname,salesOrderShipmentCreateRequest.typecode.pname)] = 'soap_salesOrderShipmentCreate'

    def soap_salesOrderShipmentAddComment(self, ps, **kw):
        request = ps.Parse(salesOrderShipmentAddCommentRequest.typecode)
        return request,salesOrderShipmentAddCommentResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_salesOrderShipmentAddComment'
    root[(salesOrderShipmentAddCommentRequest.typecode.nspname,salesOrderShipmentAddCommentRequest.typecode.pname)] = 'soap_salesOrderShipmentAddComment'

    def soap_salesOrderShipmentAddTrack(self, ps, **kw):
        request = ps.Parse(salesOrderShipmentAddTrackRequest.typecode)
        return request,salesOrderShipmentAddTrackResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_salesOrderShipmentAddTrack'
    root[(salesOrderShipmentAddTrackRequest.typecode.nspname,salesOrderShipmentAddTrackRequest.typecode.pname)] = 'soap_salesOrderShipmentAddTrack'

    def soap_salesOrderShipmentSendInfo(self, ps, **kw):
        request = ps.Parse(salesOrderShipmentSendInfoRequest.typecode)
        return request,salesOrderShipmentSendInfoResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_salesOrderShipmentSendInfo'
    root[(salesOrderShipmentSendInfoRequest.typecode.nspname,salesOrderShipmentSendInfoRequest.typecode.pname)] = 'soap_salesOrderShipmentSendInfo'

    def soap_salesOrderShipmentRemoveTrack(self, ps, **kw):
        request = ps.Parse(salesOrderShipmentRemoveTrackRequest.typecode)
        return request,salesOrderShipmentRemoveTrackResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_salesOrderShipmentRemoveTrack'
    root[(salesOrderShipmentRemoveTrackRequest.typecode.nspname,salesOrderShipmentRemoveTrackRequest.typecode.pname)] = 'soap_salesOrderShipmentRemoveTrack'

    def soap_salesOrderShipmentGetCarriers(self, ps, **kw):
        request = ps.Parse(salesOrderShipmentGetCarriersRequest.typecode)
        return request,salesOrderShipmentGetCarriersResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_salesOrderShipmentGetCarriers'
    root[(salesOrderShipmentGetCarriersRequest.typecode.nspname,salesOrderShipmentGetCarriersRequest.typecode.pname)] = 'soap_salesOrderShipmentGetCarriers'

    def soap_salesOrderInvoiceList(self, ps, **kw):
        request = ps.Parse(salesOrderInvoiceListRequest.typecode)
        return request,salesOrderInvoiceListResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_salesOrderInvoiceList'
    root[(salesOrderInvoiceListRequest.typecode.nspname,salesOrderInvoiceListRequest.typecode.pname)] = 'soap_salesOrderInvoiceList'

    def soap_salesOrderInvoiceInfo(self, ps, **kw):
        request = ps.Parse(salesOrderInvoiceInfoRequest.typecode)
        return request,salesOrderInvoiceInfoResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_salesOrderInvoiceInfo'
    root[(salesOrderInvoiceInfoRequest.typecode.nspname,salesOrderInvoiceInfoRequest.typecode.pname)] = 'soap_salesOrderInvoiceInfo'

    def soap_salesOrderInvoiceCreate(self, ps, **kw):
        request = ps.Parse(salesOrderInvoiceCreateRequest.typecode)
        return request,salesOrderInvoiceCreateResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_salesOrderInvoiceCreate'
    root[(salesOrderInvoiceCreateRequest.typecode.nspname,salesOrderInvoiceCreateRequest.typecode.pname)] = 'soap_salesOrderInvoiceCreate'

    def soap_salesOrderInvoiceAddComment(self, ps, **kw):
        request = ps.Parse(salesOrderInvoiceAddCommentRequest.typecode)
        return request,salesOrderInvoiceAddCommentResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_salesOrderInvoiceAddComment'
    root[(salesOrderInvoiceAddCommentRequest.typecode.nspname,salesOrderInvoiceAddCommentRequest.typecode.pname)] = 'soap_salesOrderInvoiceAddComment'

    def soap_salesOrderInvoiceCapture(self, ps, **kw):
        request = ps.Parse(salesOrderInvoiceCaptureRequest.typecode)
        return request,salesOrderInvoiceCaptureResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_salesOrderInvoiceCapture'
    root[(salesOrderInvoiceCaptureRequest.typecode.nspname,salesOrderInvoiceCaptureRequest.typecode.pname)] = 'soap_salesOrderInvoiceCapture'

    def soap_salesOrderInvoiceVoid(self, ps, **kw):
        request = ps.Parse(salesOrderInvoiceVoidRequest.typecode)
        return request,salesOrderInvoiceVoidResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_salesOrderInvoiceVoid'
    root[(salesOrderInvoiceVoidRequest.typecode.nspname,salesOrderInvoiceVoidRequest.typecode.pname)] = 'soap_salesOrderInvoiceVoid'

    def soap_salesOrderInvoiceCancel(self, ps, **kw):
        request = ps.Parse(salesOrderInvoiceCancelRequest.typecode)
        return request,salesOrderInvoiceCancelResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_salesOrderInvoiceCancel'
    root[(salesOrderInvoiceCancelRequest.typecode.nspname,salesOrderInvoiceCancelRequest.typecode.pname)] = 'soap_salesOrderInvoiceCancel'

    def soap_salesOrderCreditmemoList(self, ps, **kw):
        request = ps.Parse(salesOrderCreditmemoListRequest.typecode)
        return request,salesOrderCreditmemoListResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_salesOrderCreditmemoList'
    root[(salesOrderCreditmemoListRequest.typecode.nspname,salesOrderCreditmemoListRequest.typecode.pname)] = 'soap_salesOrderCreditmemoList'

    def soap_salesOrderCreditmemoInfo(self, ps, **kw):
        request = ps.Parse(salesOrderCreditmemoInfoRequest.typecode)
        return request,salesOrderCreditmemoInfoResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_salesOrderCreditmemoInfo'
    root[(salesOrderCreditmemoInfoRequest.typecode.nspname,salesOrderCreditmemoInfoRequest.typecode.pname)] = 'soap_salesOrderCreditmemoInfo'

    def soap_salesOrderCreditmemoCreate(self, ps, **kw):
        request = ps.Parse(salesOrderCreditmemoCreateRequest.typecode)
        return request,salesOrderCreditmemoCreateResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_salesOrderCreditmemoCreate'
    root[(salesOrderCreditmemoCreateRequest.typecode.nspname,salesOrderCreditmemoCreateRequest.typecode.pname)] = 'soap_salesOrderCreditmemoCreate'

    def soap_salesOrderCreditmemoAddComment(self, ps, **kw):
        request = ps.Parse(salesOrderCreditmemoAddCommentRequest.typecode)
        return request,salesOrderCreditmemoAddCommentResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_salesOrderCreditmemoAddComment'
    root[(salesOrderCreditmemoAddCommentRequest.typecode.nspname,salesOrderCreditmemoAddCommentRequest.typecode.pname)] = 'soap_salesOrderCreditmemoAddComment'

    def soap_salesOrderCreditmemoCancel(self, ps, **kw):
        request = ps.Parse(salesOrderCreditmemoCancelRequest.typecode)
        return request,salesOrderCreditmemoCancelResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_salesOrderCreditmemoCancel'
    root[(salesOrderCreditmemoCancelRequest.typecode.nspname,salesOrderCreditmemoCancelRequest.typecode.pname)] = 'soap_salesOrderCreditmemoCancel'

    def soap_catalogInventoryStockItemList(self, ps, **kw):
        request = ps.Parse(catalogInventoryStockItemListRequest.typecode)
        return request,catalogInventoryStockItemListResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogInventoryStockItemList'
    root[(catalogInventoryStockItemListRequest.typecode.nspname,catalogInventoryStockItemListRequest.typecode.pname)] = 'soap_catalogInventoryStockItemList'

    def soap_catalogInventoryStockItemUpdate(self, ps, **kw):
        request = ps.Parse(catalogInventoryStockItemUpdateRequest.typecode)
        return request,catalogInventoryStockItemUpdateResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogInventoryStockItemUpdate'
    root[(catalogInventoryStockItemUpdateRequest.typecode.nspname,catalogInventoryStockItemUpdateRequest.typecode.pname)] = 'soap_catalogInventoryStockItemUpdate'

    def soap_shoppingCartCreate(self, ps, **kw):
        request = ps.Parse(shoppingCartCreateRequest.typecode)
        return request,shoppingCartCreateResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_shoppingCartCreate'
    root[(shoppingCartCreateRequest.typecode.nspname,shoppingCartCreateRequest.typecode.pname)] = 'soap_shoppingCartCreate'

    def soap_shoppingCartInfo(self, ps, **kw):
        request = ps.Parse(shoppingCartInfoRequest.typecode)
        return request,shoppingCartInfoResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_shoppingCartInfo'
    root[(shoppingCartInfoRequest.typecode.nspname,shoppingCartInfoRequest.typecode.pname)] = 'soap_shoppingCartInfo'

    def soap_shoppingCartTotals(self, ps, **kw):
        request = ps.Parse(shoppingCartTotalsRequest.typecode)
        return request,shoppingCartTotalsResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_shoppingCartTotals'
    root[(shoppingCartTotalsRequest.typecode.nspname,shoppingCartTotalsRequest.typecode.pname)] = 'soap_shoppingCartTotals'

    def soap_shoppingCartOrder(self, ps, **kw):
        request = ps.Parse(shoppingCartOrderRequest.typecode)
        return request,shoppingCartOrderResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_shoppingCartOrder'
    root[(shoppingCartOrderRequest.typecode.nspname,shoppingCartOrderRequest.typecode.pname)] = 'soap_shoppingCartOrder'

    def soap_shoppingCartLicense(self, ps, **kw):
        request = ps.Parse(shoppingCartLicenseRequest.typecode)
        return request,shoppingCartLicenseResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_shoppingCartLicense'
    root[(shoppingCartLicenseRequest.typecode.nspname,shoppingCartLicenseRequest.typecode.pname)] = 'soap_shoppingCartLicense'

    def soap_shoppingCartProductAdd(self, ps, **kw):
        request = ps.Parse(shoppingCartProductAddRequest.typecode)
        return request,shoppingCartProductAddResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_shoppingCartProductAdd'
    root[(shoppingCartProductAddRequest.typecode.nspname,shoppingCartProductAddRequest.typecode.pname)] = 'soap_shoppingCartProductAdd'

    def soap_shoppingCartProductUpdate(self, ps, **kw):
        request = ps.Parse(shoppingCartProductUpdateRequest.typecode)
        return request,shoppingCartProductUpdateResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_shoppingCartProductUpdate'
    root[(shoppingCartProductUpdateRequest.typecode.nspname,shoppingCartProductUpdateRequest.typecode.pname)] = 'soap_shoppingCartProductUpdate'

    def soap_shoppingCartProductRemove(self, ps, **kw):
        request = ps.Parse(shoppingCartProductRemoveRequest.typecode)
        return request,shoppingCartProductRemoveResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_shoppingCartProductRemove'
    root[(shoppingCartProductRemoveRequest.typecode.nspname,shoppingCartProductRemoveRequest.typecode.pname)] = 'soap_shoppingCartProductRemove'

    def soap_shoppingCartProductList(self, ps, **kw):
        request = ps.Parse(shoppingCartProductListRequest.typecode)
        return request,shoppingCartProductListResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_shoppingCartProductList'
    root[(shoppingCartProductListRequest.typecode.nspname,shoppingCartProductListRequest.typecode.pname)] = 'soap_shoppingCartProductList'

    def soap_shoppingCartProductMoveToCustomerQuote(self, ps, **kw):
        request = ps.Parse(shoppingCartProductMoveToCustomerQuoteRequest.typecode)
        return request,shoppingCartProductMoveToCustomerQuoteResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_shoppingCartProductMoveToCustomerQuote'
    root[(shoppingCartProductMoveToCustomerQuoteRequest.typecode.nspname,shoppingCartProductMoveToCustomerQuoteRequest.typecode.pname)] = 'soap_shoppingCartProductMoveToCustomerQuote'

    def soap_shoppingCartCustomerSet(self, ps, **kw):
        request = ps.Parse(shoppingCartCustomerSetRequest.typecode)
        return request,shoppingCartCustomerSetResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_shoppingCartCustomerSet'
    root[(shoppingCartCustomerSetRequest.typecode.nspname,shoppingCartCustomerSetRequest.typecode.pname)] = 'soap_shoppingCartCustomerSet'

    def soap_shoppingCartCustomerAddresses(self, ps, **kw):
        request = ps.Parse(shoppingCartCustomerAddressesRequest.typecode)
        return request,shoppingCartCustomerAddressesResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_shoppingCartCustomerAddresses'
    root[(shoppingCartCustomerAddressesRequest.typecode.nspname,shoppingCartCustomerAddressesRequest.typecode.pname)] = 'soap_shoppingCartCustomerAddresses'

    def soap_shoppingCartShippingMethod(self, ps, **kw):
        request = ps.Parse(shoppingCartShippingMethodRequest.typecode)
        return request,shoppingCartShippingMethodResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_shoppingCartShippingMethod'
    root[(shoppingCartShippingMethodRequest.typecode.nspname,shoppingCartShippingMethodRequest.typecode.pname)] = 'soap_shoppingCartShippingMethod'

    def soap_shoppingCartShippingList(self, ps, **kw):
        request = ps.Parse(shoppingCartShippingListRequest.typecode)
        return request,shoppingCartShippingListResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_shoppingCartShippingList'
    root[(shoppingCartShippingListRequest.typecode.nspname,shoppingCartShippingListRequest.typecode.pname)] = 'soap_shoppingCartShippingList'

    def soap_shoppingCartPaymentMethod(self, ps, **kw):
        request = ps.Parse(shoppingCartPaymentMethodRequest.typecode)
        return request,shoppingCartPaymentMethodResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_shoppingCartPaymentMethod'
    root[(shoppingCartPaymentMethodRequest.typecode.nspname,shoppingCartPaymentMethodRequest.typecode.pname)] = 'soap_shoppingCartPaymentMethod'

    def soap_shoppingCartPaymentList(self, ps, **kw):
        request = ps.Parse(shoppingCartPaymentListRequest.typecode)
        return request,shoppingCartPaymentListResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_shoppingCartPaymentList'
    root[(shoppingCartPaymentListRequest.typecode.nspname,shoppingCartPaymentListRequest.typecode.pname)] = 'soap_shoppingCartPaymentList'

    def soap_shoppingCartCouponAdd(self, ps, **kw):
        request = ps.Parse(shoppingCartCouponAddRequest.typecode)
        return request,shoppingCartCouponAddResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_shoppingCartCouponAdd'
    root[(shoppingCartCouponAddRequest.typecode.nspname,shoppingCartCouponAddRequest.typecode.pname)] = 'soap_shoppingCartCouponAdd'

    def soap_shoppingCartCouponRemove(self, ps, **kw):
        request = ps.Parse(shoppingCartCouponRemoveRequest.typecode)
        return request,shoppingCartCouponRemoveResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_shoppingCartCouponRemove'
    root[(shoppingCartCouponRemoveRequest.typecode.nspname,shoppingCartCouponRemoveRequest.typecode.pname)] = 'soap_shoppingCartCouponRemove'

    def soap_catalogProductTagList(self, ps, **kw):
        request = ps.Parse(catalogProductTagListRequest.typecode)
        return request,catalogProductTagListResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductTagList'
    root[(catalogProductTagListRequest.typecode.nspname,catalogProductTagListRequest.typecode.pname)] = 'soap_catalogProductTagList'

    def soap_catalogProductTagInfo(self, ps, **kw):
        request = ps.Parse(catalogProductTagInfoRequest.typecode)
        return request,catalogProductTagInfoResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductTagInfo'
    root[(catalogProductTagInfoRequest.typecode.nspname,catalogProductTagInfoRequest.typecode.pname)] = 'soap_catalogProductTagInfo'

    def soap_catalogProductTagAdd(self, ps, **kw):
        request = ps.Parse(catalogProductTagAddRequest.typecode)
        return request,catalogProductTagAddResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductTagAdd'
    root[(catalogProductTagAddRequest.typecode.nspname,catalogProductTagAddRequest.typecode.pname)] = 'soap_catalogProductTagAdd'

    def soap_catalogProductTagUpdate(self, ps, **kw):
        request = ps.Parse(catalogProductTagUpdateRequest.typecode)
        return request,catalogProductTagUpdateResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductTagUpdate'
    root[(catalogProductTagUpdateRequest.typecode.nspname,catalogProductTagUpdateRequest.typecode.pname)] = 'soap_catalogProductTagUpdate'

    def soap_catalogProductTagRemove(self, ps, **kw):
        request = ps.Parse(catalogProductTagRemoveRequest.typecode)
        return request,catalogProductTagRemoveResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductTagRemove'
    root[(catalogProductTagRemoveRequest.typecode.nspname,catalogProductTagRemoveRequest.typecode.pname)] = 'soap_catalogProductTagRemove'

    def soap_giftMessageSetForQuote(self, ps, **kw):
        request = ps.Parse(giftMessageForQuoteRequest.typecode)
        return request,giftMessageForQuoteResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_giftMessageSetForQuote'
    root[(giftMessageForQuoteRequest.typecode.nspname,giftMessageForQuoteRequest.typecode.pname)] = 'soap_giftMessageSetForQuote'

    def soap_giftMessageSetForQuoteItem(self, ps, **kw):
        request = ps.Parse(giftMessageForQuoteItemRequest.typecode)
        return request,giftMessageForQuoteItemResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_giftMessageSetForQuoteItem'
    root[(giftMessageForQuoteItemRequest.typecode.nspname,giftMessageForQuoteItemRequest.typecode.pname)] = 'soap_giftMessageSetForQuoteItem'

    def soap_giftMessageSetForQuoteProduct(self, ps, **kw):
        request = ps.Parse(giftMessageForQuoteProductRequest.typecode)
        return request,giftMessageForQuoteProductResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_giftMessageSetForQuoteProduct'
    root[(giftMessageForQuoteProductRequest.typecode.nspname,giftMessageForQuoteProductRequest.typecode.pname)] = 'soap_giftMessageSetForQuoteProduct'

    def soap_catalogProductDownloadableLinkAdd(self, ps, **kw):
        request = ps.Parse(catalogProductDownloadableLinkAddRequest.typecode)
        return request,catalogProductDownloadableLinkAddResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductDownloadableLinkAdd'
    root[(catalogProductDownloadableLinkAddRequest.typecode.nspname,catalogProductDownloadableLinkAddRequest.typecode.pname)] = 'soap_catalogProductDownloadableLinkAdd'

    def soap_catalogProductDownloadableLinkList(self, ps, **kw):
        request = ps.Parse(catalogProductDownloadableLinkListRequest.typecode)
        return request,catalogProductDownloadableLinkListResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductDownloadableLinkList'
    root[(catalogProductDownloadableLinkListRequest.typecode.nspname,catalogProductDownloadableLinkListRequest.typecode.pname)] = 'soap_catalogProductDownloadableLinkList'

    def soap_catalogProductDownloadableLinkRemove(self, ps, **kw):
        request = ps.Parse(catalogProductDownloadableLinkRemoveRequest.typecode)
        return request,catalogProductDownloadableLinkRemoveResponse()

    soapAction['urn:Mage_Api_Model_Server_V2_HandlerAction'] = 'soap_catalogProductDownloadableLinkRemove'
    root[(catalogProductDownloadableLinkRemoveRequest.typecode.nspname,catalogProductDownloadableLinkRemoveRequest.typecode.pname)] = 'soap_catalogProductDownloadableLinkRemove'

